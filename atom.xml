<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一川·MOLIPRE·BLOG</title>
  <icon>https://www.gravatar.com/avatar/313fee614a2feb83f1f78d54aca36e10</icon>
  <subtitle>读万卷书，行万里路</subtitle>
  <link href="https://blog.molipre.com/atom.xml" rel="self"/>
  
  <link href="https://blog.molipre.com/"/>
  <updated>2020-11-09T07:46:11.278Z</updated>
  <id>https://blog.molipre.com/</id>
  
  <author>
    <name>一川</name>
    <email>819591739@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>斐讯N1刷OpenWrt系统做旁路由</title>
    <link href="https://blog.molipre.com/posts/4a17b156.html"/>
    <id>https://blog.molipre.com/posts/4a17b156.html</id>
    <published>2020-10-27T01:27:34.000Z</published>
    <updated>2020-11-09T07:46:11.278Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="为什么要用N1盒子当做旁路由"><a href="#为什么要用N1盒子当做旁路由" class="headerlink" title="为什么要用N1盒子当做旁路由"></a>为什么要用N1盒子当做旁路由</h2><ol><li>按照斐讯N1的价格来买相同的路由器<p style="font-size:0.7rem;font-weight:600;display:inline">(50元-200元，价格标准按照PDD平台，主要是因为斐讯N1盒子涨价和降价的原因，购入价格可能大为不同)</p>，目前市面上200元以内能买到的最新路由器基本都是性能挺不错的，基本能满足普通用户500M以下宽带的使用，甚至200元已经能买到WiFi6的路由器了。但是总会有用户对网络环境有其他的需求，例如我本人可能会需要去广告，自动签到等一些服务。</li><li><strong>是否能使用普通路由器？</strong>关于这个问题，其实一些硬路由(普通路由器)通过刷固件是能够实现上诉一些功能，但是因为要分出一定的性能去实现这些服务，可能会影响网络质量，因此额外增加一台路由器当做旁路由是能够很好解决性能问题，不影响网络质量，而且也能解决特许需求，旁路由出现问题也能快速解决且不影响整体的网络。</li><li><strong>为何不用x86软路由？</strong>对标价格、体积、功耗、性能，以我80元一台买到手的价格为例，巴掌大小的体积，5w不到的功耗，是为上上之选，同价位的软路由基本是两三个斐讯N1大小，同大小的软路由基本价格翻几倍，加上我需求不需要过高的性能，斐讯N1可以说是我最好的选择<p style="font-size:0.7rem;font-weight:600;display:inline">(当然前提是你现在买到的价格是几十块钱，不过我写下这篇文章的时候斐讯N1的价格基本都要150+元了)</p>。</li></ol><h2 id="斐讯N1盒子是什么"><a href="#斐讯N1盒子是什么" class="headerlink" title="斐讯N1盒子是什么"></a>斐讯N1盒子是什么</h2><ol><li><strong>斐讯N1盒子是2018年斐讯公司推出的一款天天链终端，原本是用于挖矿使用，附带NAS的功能，后来因为某种原因斐讯公司倒闭，斐讯N1盒子的服务器也随之关闭，挖矿(NAS)功能也就无法使用了，但是斐讯N1的配置非常不错，加之斐讯公司倒闭初期，许多斐讯N1盒子出售的价格很便宜，许多大佬通过开发挖掘了斐讯N1的玩法，并且不断维护更新，最终斐讯N1盒子变成了现在大家熟悉的电视盒子、软路由、小型服务器、影音播放器等。</strong></li><li><strong>斐讯N1盒子配置：</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">分辨率 - 支持4K输出</span><br><span class="line">SoC - Allogic S905D 64bit 4Core Cortex-A53 1.5G Hz</span><br><span class="line">GPU - Mali-450</span><br><span class="line">RAM - 2GB</span><br><span class="line">ROM - 8GB eMMC</span><br><span class="line">WIFI - 2.4G&#x2F;5G</span><br><span class="line">蓝牙 - BT4.1</span><br><span class="line">电源 - 5V&#x2F;2A x1</span><br><span class="line">网口 - 千兆网口 x1</span><br><span class="line">HDMI - x1</span><br><span class="line">USB - USB2.0 x2</span><br></pre></td></tr></table></figure></li></ol><details ><summary> <p>斐讯N1盒子的玩法</p> </summary>              <div class='content'>              <ol><li><strong>NAS</strong><br>NAS应该是斐讯N1盒子比较多人玩的一种玩法，例如刷如OMV<p style="font-size:0.7rem;font-weight:600;display:inline">(OpenMediaVault)</p>系统，再外接移动硬盘便可用作NAS，不过斐讯N1盒子虽然有两个USB接口，但都是USB2.0，速度上会有所限制。</li><li><strong>服务器</strong><br>服务器就有很多种类型了，只需要刷上一个Linux系统<p style="font-size:0.7rem;font-weight:600;display:inline">(Armbian、Centos等)</p>即可当做服务器使用，基本上正常服务器上可以做的，N1也可以做，不过因为架构是Arm，所以有些软件的安装还是要找对应架构的。</li><li><strong>游戏机</strong><br>游戏机就是很简单的，刷入一个游戏模拟器，再导入游戏包即可，连接上电视，用手柄怀念一下儿时的乐趣还是可以的。</li><li><strong>电视盒子</strong><br>电视盒子应该是斐讯N1最早的玩法了，因为和斐讯T1这个电视盒子差不多的，很快就被开发出来了，也是比较推荐的一种玩法，我其中一个斐讯N1盒子就是用作电视盒子，拓展性和性能比很多正牌电视盒子都好。</li><li><strong>软路由</strong><br>软路由就是今天要讲的一种玩法，N1盒子的性能不错，跑500M的宽带基本没问题，刷个路由器系统，再装一些插件，完美使用，例如我目前正在使用的OP系统<p style="font-size:0.7rem;font-weight:600;display:inline">(OpenWrt)</p>。</li></ol>              </div>            </details><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><ul><li><strong>一台电脑</strong> (最好是Windows，教程用的是)</li><li><strong>斐讯N1盒子和电源</strong></li><li><strong>HDMI线</strong></li><li><strong>有HDMI接口的显示器</strong> (电视也行)</li><li><strong>USB公对公线</strong> (降级需要用)</li><li><strong>U盘</strong> (3.0/2.0都可以，主要是能被识别到就行)</li><li><strong>网线</strong></li></ul><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><ul><li><strong>镜像文件写入工具<a href="https://www.balena.io/etcher/">balenaEtcher</a></strong> (博主习惯用这个，其他的能写入且没问题也行)</li><li><strong>斐讯N1降级工具(<a href="https://share.weiyun.com/5klmuxd">下载</a><span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: black;">点击查看密码  </button><span class="hide-content">密码：yaefa9</span></span>)</strong></li><li><strong>OpenWrt固件(<a href="https://yadi.sk/d/y6dXguRCij6LTg?w=1">下载</a>)</strong></li><li><strong>adb驱动</strong> (pc设备管理器中通过Windows自动搜索驱动安装)</li></ul><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h2 id="降级"><a href="#降级" class="headerlink" title="降级"></a>降级</h2><div class="note red quote flat"><p><strong>降级教程参考webpad大佬的教程，大家也可以移步查看 <a href="https://www.right.com.cn/forum/thread-340279-1-1.html">斐讯T1和N1降级恢复线刷功能</a></strong></p></div><ol><li><p><strong>接线，如图所示：</strong><br><img src="https://i.loli.net/2020/11/06/zpHaXQRSFD597iq.png" alt="接线.png"></p></li><li><p><strong>接线完成后，给盒子通电，等待一段时间，连接斐讯N1的显示器出现以下画面，记住网络信息中的IP地址</strong>(降级需要用到)<strong>，然后使用鼠标点击四次红框圈中固件版本号打开adb，出现红色方框提示便成功打开adb，如下图所示：</strong></p><p><img src="https://i.loli.net/2020/11/06/dm1EYb7QMT8j4Z3.jpg" alt="n11.jpg"></p></li><li><p><strong>解压下载好的 <code>斐讯T1、N1官方系统降级工具.zip</code>，打开 <code>onekey</code> 文件夹，找到 <code>run.bat</code> 并运行，按照操作提示输入即可，具体步骤我就不写也不截图，需要的可以看一下webpad大佬的原帖。</strong></p><p><img src="https://i.loli.net/2020/11/06/oUEnedKG7rcfavt.png" alt="run1.png"></p></li></ol><h2 id="刷入OpenWrt固件"><a href="#刷入OpenWrt固件" class="headerlink" title="刷入OpenWrt固件"></a>刷入OpenWrt固件</h2><div class="note red quote flat"><p><strong>刷入OpenWrt的教程和相关固件参考 <a href="https://www.right.com.cn/forum/thread-3160780-1-1.html">N1盒子 Openwrt 固件,支持写入EMMC！</a></strong></p></div><ol><li><strong>制作镜像U盘</strong><ul><li><strong>使用 <code>balenaEtcher</code></strong> (或者其他工具) <strong>将下载好的OpenWrt镜像写入U盘。</strong><br><img src="https://i.loli.net/2020/11/06/XaC3SAWLQevHub2.png" alt="ba.png"></li></ul></li><li><strong>U盘启动</strong><ul><li><strong>将已经写入系统的U盘插入靠近HDMI接口的USB接口，在刚才的降级工具文件夹按住 <code>Shift</code> 右键打开 <code>PowerShell</code> ，输入以下命令使得斐讯N1盒子进入U盘的系统：</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">./adb connect IP</span><br><span class="line"><span class="comment">#此IP为之前需要记住的IP地址</span></span><br><span class="line">./adb shell reboot update</span><br></pre></td></tr></table></figure></li><li><strong>查看斐讯N1盒子连接的显示器，出现四只企鹅则U盘OpenWrt启动正常。</strong></li><li><strong>若出现机器人倒地，请多换几个U盘重复刷入固件步骤进行尝试。</strong></li></ul></li><li><strong>在电脑的浏览器输入 <code>192.168.123.2</code> 即可进入OpenWrt后台管理。</strong></li></ol><div class="note red idea flat"><p><strong>注意以下两步为摆脱U盘，刷写固件到斐讯N1盒子的eMMC的操作，如不需摆脱U盘，可省略下面两步操作</strong></p></div><ol><li><strong>刷入eMMC并启动</strong><ul><li><strong>登陆 <code>OpenWrt</code> 管理后台，依次来到 <code>系统</code> → <code>TTYD终端(网页终端)</code> ，看到 <code>OpenWrt login: </code>,输入用户名 <code>root</code> 敲回车，<code>Password: </code>输入密码 <code>password</code> 敲回车即可登录成功。</strong><div class="hide-toggle" style="border: 1px solid bg"><div class="hide-button toggle-title" style="background-color: bg">  <i class="fas fa-caret-right fa-fw"></i><span>隐藏信息</span></div><div class="hide-content">  <ul>  <p style="font-size:0.8rem;font-weight:600;display: inline">前提是刷了我给的链接中的固件，其他固件请参考固件原帖信息</p><br>  OpenWrt默认后台管理地址：192.168.123.2，默认用户名：root，密码：password<br>  文件浏览器默认用户名及密码：admin<br>  qBittorrent Web用户界面默认用户名：admin，密码：adminadmin    </ul></div></div></li><li><strong>登录成功后会出现 <code>root@N1:~#</code> ，输入以下命令回车并按照提示操作即可：</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">./install.sh</span><br><span class="line"><span class="comment">#执行写入EMMC 脚本命令</span></span><br><span class="line">./update.sh</span><br><span class="line"><span class="comment">#此命令为 “保留配置升级” 命令，但版本跨度过大，不建议使用该命令来升级固件</span></span><br></pre></td></tr></table></figure></li></ul></li><li><strong>重启斐讯N1盒子，然后拔掉U盘，等待斐讯N1盒子启动后，在电脑的浏览器输入 <code>192.168.123.2</code> 即可进入OpenWrt后台管理。</strong></li></ol><h2 id="设置N1-OpenWrt-为旁路由"><a href="#设置N1-OpenWrt-为旁路由" class="headerlink" title="设置N1(OpenWrt)为旁路由"></a>设置N1(OpenWrt)为旁路由</h2><div class="note red idea flat"><p><strong>注意以下步骤均以我自己的网段为主，如你的主路由器网段不是 <code>192.168.123.x</code> ，请修改相应的IP。</strong></p></div><ol><li><strong>主路由设置</strong><ul><li><strong>如果你的主路由是原厂华硕、梅林、Pandavan等固件，请参照下图1、2步骤：</strong><br>(以我的固件版本为原厂3.0.0.4.385_20632的华硕AC1900P为例)<br><img src="https://i.loli.net/2020/11/09/cINEmF17CtjbrRQ.png" alt="lan.png"></li><li><strong>如果你的主路由也是OpenWrt固件，请参照以下步骤以及图片：</strong><br><strong><code>网络</code> → <code>接口</code> → <code>LAN</code> → <code>修改</code> → <code>下拉到最后</code> → <code>DHCP服务器</code> → <code>高级设置</code> → <code>DHCP选项</code></strong><br><strong>添加以下两行：<code>3,192.168.123.2</code> 与 <code>6,192.168.123.2</code></strong><br><img src="https://i.loli.net/2020/11/09/uqbf43yo7tZPHTz.png" alt="lan1.png"><br><img src="https://i.loli.net/2020/11/09/zD2tSGiA4HPIl7Q.png" alt="lan2.png"></li></ul></li><li><strong>旁路由设置</strong><ul><li><strong>登录斐讯N1后台，按以下步骤找到IPv4网关，修改为如图所示，最后确认修改即可</strong><br><strong><code>网络</code> → <code>接口</code> → <code>LAN</code> → <code>修改</code> → <code>IPv4网关</code> → <code>修改为192.168.123.2</code> → <code>保存&amp;应用</code></strong><br><img src="https://i.loli.net/2020/11/09/UIRVnzfp8FyeSZm.png" alt="lan3.png"></li></ul></li></ol><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><ul><li><strong>祝看到这里的小伙伴玩得开心，成功让斐讯N1成为路由器。</strong></li></ul><p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p>]]></content>
    
    
    <summary type="html">斐讯N1盒子刷OpenWrt固件至eMMC当做旁路由使用</summary>
    
    
    
    <category term="硬件相关" scheme="https://blog.molipre.com/categories/%E7%A1%AC%E4%BB%B6%E7%9B%B8%E5%85%B3/"/>
    
    <category term="斐讯N1" scheme="https://blog.molipre.com/categories/%E7%A1%AC%E4%BB%B6%E7%9B%B8%E5%85%B3/%E6%96%90%E8%AE%AFN1/"/>
    
    
    <category term="斐讯N1" scheme="https://blog.molipre.com/tags/%E6%96%90%E8%AE%AFN1/"/>
    
    <category term="旁路由" scheme="https://blog.molipre.com/tags/%E6%97%81%E8%B7%AF%E7%94%B1/"/>
    
    <category term="OpenWrt" scheme="https://blog.molipre.com/tags/OpenWrt/"/>
    
  </entry>
  
  <entry>
    <title>Linux命令合集</title>
    <link href="https://blog.molipre.com/posts/34a679ba.html"/>
    <id>https://blog.molipre.com/posts/34a679ba.html</id>
    <published>2020-10-21T03:13:55.000Z</published>
    <updated>2020-11-04T09:22:46.098Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Linux常用命令记录"><a href="#Linux常用命令记录" class="headerlink" title="Linux常用命令记录"></a>Linux常用命令记录</h1><h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2><ol><li><strong>grep</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&#x27;组名&#x27;</span> /etc/group</span><br><span class="line"><span class="comment">#获得组号</span></span><br><span class="line">grep <span class="string">&#x27;组号&#x27;</span> /etc/passwd</span><br><span class="line"><span class="comment">#获得组下所有用户</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#用户在/etc/passwd</span></span><br><span class="line"><span class="comment">#组 在/etc/group</span></span><br></pre></td></tr></table></figure></li><li><strong>chgrp</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">chgrp group1 /home/user1</span><br><span class="line"><span class="comment">#修改home下的user1文件夹所属组为group1</span></span><br><span class="line">chgrp group1 /home/user1.log</span><br><span class="line"><span class="comment">#修改home下的user1.log文件所属组为group1</span></span><br><span class="line"><span class="comment">#-c或--changes 效果类似&quot;-v&quot;参数，但仅回报更改的部分</span></span><br><span class="line"><span class="comment">#-f或--quiet或--silent 不显示错误信息。</span></span><br><span class="line"><span class="comment">#-h或--no-dereference 只对符号连接的文件作修改，而不更动其他任何相关文件。</span></span><br><span class="line"><span class="comment">#-R或--recursive 递归处理，将指定目录下的所有文件及子目录一并处理。</span></span><br><span class="line"><span class="comment">#-v或--verbose 显示指令执行过程。</span></span><br><span class="line"><span class="comment">#--help 在线帮助。</span></span><br><span class="line"><span class="comment">#--reference=&lt;参考文件或目录&gt; 把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同。</span></span><br><span class="line"><span class="comment">#--version 显示版本信息。</span></span><br></pre></td></tr></table></figure><h2 id="文档编辑"><a href="#文档编辑" class="headerlink" title="文档编辑"></a>文档编辑</h2><h2 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h2><h2 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h2><h2 id="磁盘维护"><a href="#磁盘维护" class="headerlink" title="磁盘维护"></a>磁盘维护</h2><h2 id="网络通讯"><a href="#网络通讯" class="headerlink" title="网络通讯"></a>网络通讯</h2><h2 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h2></li><li><strong>usermod</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">usermod -a -G group1 user1</span><br><span class="line"><span class="comment">#添加用户user1到组group1里</span></span><br><span class="line"><span class="comment">#-a 在原来的所属组的基础上增加</span></span><br><span class="line"><span class="comment">#-c&lt;备注&gt; 修改用户帐号的备注文字。</span></span><br><span class="line"><span class="comment">#-d登入目录&gt; 修改用户登入时的目录。</span></span><br><span class="line"><span class="comment">#-e&lt;有效期限&gt; 修改帐号的有效期限。</span></span><br><span class="line"><span class="comment">#-f&lt;缓冲天数&gt; 修改在密码过期后多少天即关闭该帐号。</span></span><br><span class="line"><span class="comment">#-g&lt;群组&gt; 修改用户所属的群组。</span></span><br><span class="line"><span class="comment">#-G&lt;群组&gt; 修改用户所属的附加群组。</span></span><br><span class="line"><span class="comment">#-l&lt;帐号名称&gt; 修改用户帐号名称。</span></span><br><span class="line"><span class="comment">#-L 锁定用户密码，使密码无效。</span></span><br><span class="line"><span class="comment">#-s&lt;shell&gt; 修改用户登入后所使用的shell。</span></span><br><span class="line"><span class="comment">#-u&lt;uid&gt; 修改用户ID。</span></span><br><span class="line"><span class="comment">#-U 解除密码锁定。</span></span><br></pre></td></tr></table></figure><h2 id="系统设置"><a href="#系统设置" class="headerlink" title="系统设置"></a>系统设置</h2><h2 id="备份压缩"><a href="#备份压缩" class="headerlink" title="备份压缩"></a>备份压缩</h2></li></ol><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p><strong>记录一些自己平时会用到的命令，避免忘记后查资料麻烦。</strong></p><p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p>]]></content>
    
    
    <summary type="html">记录自己常用的Linux命令，以便往后使用查询</summary>
    
    
    
    <category term="学习&amp;随想" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/"/>
    
    <category term="学习📖" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/%E5%AD%A6%E4%B9%A0%F0%9F%93%96/"/>
    
    <category term="Linux" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/%E5%AD%A6%E4%B9%A0%F0%9F%93%96/Linux/"/>
    
    
    <category term="Linux" scheme="https://blog.molipre.com/tags/Linux/"/>
    
    <category term="Linux常用命令" scheme="https://blog.molipre.com/tags/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>分类测试5</title>
    <link href="https://blog.molipre.com/posts/33cbbda3.html"/>
    <id>https://blog.molipre.com/posts/33cbbda3.html</id>
    <published>2020-10-20T03:49:33.935Z</published>
    <updated>2020-11-02T02:20:50.957Z</updated>
    
    <content type="html"><![CDATA[<p>分类测试5</p><p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;分类测试5&lt;/p&gt;
&lt;p&gt;&lt;big&gt;&lt;strong&gt;&lt;center&gt;如有问题请点击&lt;a href=&quot;mailto:819591739@qq.com&quot;&gt;邮件&lt;/a&gt;或在底下评论与我联系&lt;/center&gt;&lt;/strong&gt;&lt;/big&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="学习&amp;随想" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/"/>
    
    <category term="随想💡" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/%E9%9A%8F%E6%83%B3%F0%9F%92%A1/"/>
    
    
    <category term="随想" scheme="https://blog.molipre.com/tags/%E9%9A%8F%E6%83%B3/"/>
    
  </entry>
  
  <entry>
    <title>分类测试4</title>
    <link href="https://blog.molipre.com/posts/44cc8d35.html"/>
    <id>https://blog.molipre.com/posts/44cc8d35.html</id>
    <published>2020-10-17T03:42:21.344Z</published>
    <updated>2020-11-02T02:20:54.421Z</updated>
    
    <content type="html"><![CDATA[<p>分类测试4</p><p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;分类测试4&lt;/p&gt;
&lt;p&gt;&lt;big&gt;&lt;strong&gt;&lt;center&gt;如有问题请点击&lt;a href=&quot;mailto:819591739@qq.com&quot;&gt;邮件&lt;/a&gt;或在底下评论与我联系&lt;/center&gt;&lt;/strong&gt;&lt;/big&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="学习&amp;随想" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/"/>
    
    <category term="学习📖" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/%E5%AD%A6%E4%B9%A0%F0%9F%93%96/"/>
    
    <category term="网络工程" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/%E5%AD%A6%E4%B9%A0%F0%9F%93%96/%E7%BD%91%E7%BB%9C%E5%B7%A5%E7%A8%8B/"/>
    
    
    <category term="HCNA" scheme="https://blog.molipre.com/tags/HCNA/"/>
    
  </entry>
  
  <entry>
    <title>分类测试3</title>
    <link href="https://blog.molipre.com/posts/daa81896.html"/>
    <id>https://blog.molipre.com/posts/daa81896.html</id>
    <published>2020-10-17T03:37:46.656Z</published>
    <updated>2020-11-02T02:20:58.122Z</updated>
    
    <content type="html"><![CDATA[<p>分类测试3</p><p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;分类测试3&lt;/p&gt;
&lt;p&gt;&lt;big&gt;&lt;strong&gt;&lt;center&gt;如有问题请点击&lt;a href=&quot;mailto:819591739@qq.com&quot;&gt;邮件&lt;/a&gt;或在底下评论与我联系&lt;/center&gt;&lt;/strong&gt;&lt;/big&gt;&lt;/p&gt;
</summary>
      
    
    
    
    <category term="产品体验" scheme="https://blog.molipre.com/categories/%E4%BA%A7%E5%93%81%E4%BD%93%E9%AA%8C/"/>
    
    <category term="Apple相关🍎" scheme="https://blog.molipre.com/categories/%E4%BA%A7%E5%93%81%E4%BD%93%E9%AA%8C/Apple%E7%9B%B8%E5%85%B3%F0%9F%8D%8E/"/>
    
    
    <category term="妙控板" scheme="https://blog.molipre.com/tags/%E5%A6%99%E6%8E%A7%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>使用Jsdelivr加快博客的访问速度</title>
    <link href="https://blog.molipre.com/posts/facd24db.html"/>
    <id>https://blog.molipre.com/posts/facd24db.html</id>
    <published>2020-10-16T07:44:17.000Z</published>
    <updated>2020-11-03T09:47:48.073Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><ol><li><strong>博客或者项目部署在Github的朋友应该都会遇到Github加载很慢的问题，甚至有时候可能会打不开，这个时候可能就需要一个CDN加速了。</strong></li><li><strong>JsDelivr 是一个免费、开源的加速CDN公共服务，托管了许多大大小小的项目，可加速访问托管的项目目录或图片资源。如果你想加载Github某个仓库中的CSS样式或JS或者某张图片，可以通过JsDelivr来访问加载的。</strong></li><li><strong><a href="https://www.jsdelivr.com/">JsDelivr官网</a>提供了 <code>Github</code> 、<code>npm</code> 、<code>Wordpress</code> 这三个直观例子，有兴趣的道友可以去<a href="https://www.jsdelivr.com/">官网</a>了解一下。</strong></li></ol><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><h2 id="访问Github资源的用法"><a href="#访问Github资源的用法" class="headerlink" title="访问Github资源的用法"></a>访问Github资源的用法</h2><div class="note blue quote flat"><p><strong>这个方法需要你有一个Github账号，没有的话请到<a href="https://github.com/">Github官网</a>注册账号。</strong></p></div><ol><li><strong>登录Github并创建新仓库，把资源部署到Github，具体方法请参考<a href="https://blog.molipre.com/posts/b016f2f1.html">从零开始的个人博客搭建(Win10篇)</a>或以下命令：</strong><br><img src="https://i.loli.net/2020/11/03/BfkljJZri7xUAGY.png" alt="命令.png"></li><li><strong>部署完项目后在 <code>Code</code> 页面点击 <code>Releases</code> 下的 <code>Create a new release</code> ，按照图二操作填写，最后点击 <code>Pulish release</code> 完成即可。</strong><br><img src="https://i.loli.net/2020/11/03/CHkJSWTrwGmfQaZ.png" alt="releases1.png"><br><img src="https://i.loli.net/2020/11/03/O3brwCVMBD2HLZy.png" alt="tags.png"></li><li><strong>如何使用</strong><ul><li><strong>创建完随意进入一个文件中，如下图：</strong><br><img src="https://i.loli.net/2020/11/03/F3ZNv5nlgX17uhc.png" alt="jsd1.png"></li><li><strong>红框中的地址为：</strong><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;Molipre&#x2F;Molipre-1.0&#x2F;blob&#x2F;v1.0.1&#x2F;blog&#x2F;mycss&#x2F;mystyle.css</span><br><span class="line">&#x2F;&#x2F;这个地址用jsdelivr访问可以写为：</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;Molipre&#x2F;Molipre-1.0@v1.0.1&#x2F;blog&#x2F;mycss&#x2F;mystyle.css</span><br><span class="line">&#x2F;&#x2F;经过对比可以发现，格式如下：</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;用户名称&#x2F;仓库名称@版本号&#x2F;目录</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;注意，不使用jsdelivr直接引用github的文件 content-type 是 text&#x2F;plain 页面无法解析。</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="用于Butterfly主题"><a href="#用于Butterfly主题" class="headerlink" title="用于Butterfly主题"></a>用于Butterfly主题</h2><ol><li><strong>打开主题配置文件 <code>_config.yml</code> ，找到 <code>inject</code> ，如下图所示插入即可：</strong><br><img src="https://i.loli.net/2020/11/03/PCbWDcRnfaUxwNj.png" alt="in.png"></li></ol><div class="note blue quote flat"><p><big><strong>另外两种使用模板如下：</strong></big></p></div><h2 id="访问npm的用法"><a href="#访问npm的用法" class="headerlink" title="访问npm的用法"></a>访问npm的用法</h2><ol><li><p style="font-size:0.7rem;font-weight:600">https://cdn.jsdelivr.net/npm/包名@版本号/目录</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F;加载NPM上托管的任何项目</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;package@version&#x2F;file</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;加载jQuery v3.2.1</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery@3.2.1&#x2F;dist&#x2F;jquery.min.js</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;使用版本范围而不是具体版本</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery@3.2&#x2F;dist&#x2F;jquery.min.js</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery@3&#x2F;dist&#x2F;jquery.min.js</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;完全省略版本，获取最新版本</span><br><span class="line">&#x2F;&#x2F;不能在生产中使用</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery&#x2F;dist&#x2F;jquery.min.js</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;在任意JS&#x2F;CSS文件中添加“.min”，即可得到精简版本</span><br><span class="line">&#x2F;&#x2F;如果没有，我们会为您生成</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery@3.2.1&#x2F;src&#x2F;core.min.js</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;省略文件路径获取默认文件</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery@3.2</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;在末尾添加&#x2F;，以获取目录列表。</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery&#x2F;</span><br></pre></td></tr></table></figure></li></ol><h2 id="访问wordpress的用法"><a href="#访问wordpress的用法" class="headerlink" title="访问wordpress的用法"></a>访问wordpress的用法</h2><ol><li><p style="font-size:0.7rem;font-weight:600">https://cdn.jsdelivr.net/wp/xxxxxxxx</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&#x2F;&#x2F; 加载任何插件从WordPress.org插件SVN repo</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;wp&#x2F;plugins&#x2F;project&#x2F;tags&#x2F;version&#x2F;file</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 加载精确版本</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;wp&#x2F;plugins&#x2F;wp-slimstat&#x2F;tags&#x2F;4.6.5&#x2F;wp-slimstat.js</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 加载最新版本</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 你不应该在生产中使用这个</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;wp&#x2F;plugins&#x2F;wp-slimstat&#x2F;trunk&#x2F;wp-slimstat.js</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 从WordPress.org的主题SVN repo加载任何主题</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;wp&#x2F;themes&#x2F;project&#x2F;version&#x2F;file</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 加载精确版本</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;wp&#x2F;themes&#x2F;twenty-eightteen&#x2F;1.7&#x2F;assets&#x2F;js&#x2F;html5.js</span><br></pre></td></tr></table></figure></li></ol><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p><strong>祝大家成功用上CDN加速，搭建更好更快的博客以及项目。</strong></p><p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p>]]></content>
    
    
    <summary type="html">使用Jsdelivr加速访问Github上托管的静态资源</summary>
    
    
    
    <category term="博客の美化" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/"/>
    
    <category term="Hexo👾" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/Hexo%F0%9F%91%BE/"/>
    
    
    <category term="Hexo" scheme="https://blog.molipre.com/tags/Hexo/"/>
    
    <category term="Github" scheme="https://blog.molipre.com/tags/Github/"/>
    
    <category term="博客搭建" scheme="https://blog.molipre.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="Jsdelivr" scheme="https://blog.molipre.com/tags/Jsdelivr/"/>
    
  </entry>
  
  <entry>
    <title>博客的多终端部署与使用(小白向、持续更新)</title>
    <link href="https://blog.molipre.com/posts/43f57944.html"/>
    <id>https://blog.molipre.com/posts/43f57944.html</id>
    <published>2020-10-04T01:12:29.000Z</published>
    <updated>2020-11-09T06:58:08.089Z</updated>
    
    <content type="html"><![CDATA[<div class="note red quote flat"><p><strong>多终端部署的前提是，至少在一台终端做好了个人博客的搭建。<br>如未曾部署查看<a href="https://blog.molipre.com/posts/b016f2f1.html">从零开始的个人博客搭建(Win10篇)</a>。</strong></p></div><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ol><li><strong>多终端部署的想法是因为国庆在家的时候想要修改博客，但是发现部署到Github的代码克隆下来是已经编译好的，无法用于博客的修改、部署、使用。</strong></li><li><strong>查找了许多资料，以及经过了自己的多次尝试，整合了下面比较适合新手小白的方法，可以应用在电脑或手机等不同设备对博客进行修改和部署。</strong></li></ol><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="远程仓库配置"><a href="#远程仓库配置" class="headerlink" title="远程仓库配置"></a>远程仓库配置</h2><div class="note blue quote flat"><p><strong>我这边演示的平台是Gitee，因为在国内进行更新或拉取比较快。</strong></p></div><ol><li><strong>登录<a herf="https://gitee.com/">Gitee</a>，点击左上角的 <code>+</code> ，接着点击 <code>新建仓库</code> ，在如下图所示的1、2、3、4分别填入 <code>仓库名称</code> 、<code>路径</code> 和点击 <code>私有</code> 以及勾选 <code>初始化</code> ，最后点击 <code>创建</code> 即可，关于名称填写如不理解按照下图所示填写即可。</strong><br><img src="https://i.loli.net/2020/10/30/6X5CGuNbDwUl4oK.png" alt="gitee2.png"><div class="note info flat"><p>关于勾选私有的原因是因为这个是博客的源码并不需要展示出来，当然勾选公开也没有问题。</p></div></li><li><strong>添加密钥</strong><ul><li><strong>在Gitee页面点击左上角的 <code>+</code> ，接着点击 <code>设置</code> ，在左边的侧边栏找到 <code>SSH公钥</code> 并点击，按图片中的1、2操作步骤所示，填写你在<a href="https://blog.molipre.com/posts/b016f2f1.html">从零开始的个人博客搭建(Win10篇)</a>中所生成的公钥 <code>id_rsa.pub</code> 内容，最后确认即可：</strong><div class="note info flat"><p>可以把文件 <code>id_rsa.pub</code> 备份到U盘或网盘，异地终端需要公钥内容。</p></div><img src="https://i.loli.net/2020/10/31/VTgN1IMBUsJWGc7.png" alt="密钥添加2.png"></li></ul></li></ol><h2 id="本地配置Git"><a href="#本地配置Git" class="headerlink" title="本地配置Git"></a>本地配置Git</h2><ol><li><p><strong>打开第一台已配置好的博客的电脑，进入 <code>hexoblog</code> 文件夹，右键点击 <code>Git Bsah Here</code> ，输入以下命令：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line"><span class="comment">#git初始化</span></span><br><span class="line">git remote add origin git@gitee.com:molipre/hexo-source-code.git</span><br><span class="line"><span class="comment">#添加远程仓库</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment">#添加目录下所有文件</span></span><br><span class="line">git commit -m <span class="string">&quot;博客源码&quot;</span></span><br><span class="line"><span class="comment">#提交并添加更新说明</span></span><br><span class="line">git push -u origin master</span><br><span class="line"><span class="comment">#推送更新到远程仓库</span></span><br></pre></td></tr></table></figure><p><strong>出现以下截图内容代表成功把博客源码推送到仓库了：</strong><br><img src="https://i.loli.net/2020/10/31/XLUyWRPMw76qi5G.png" alt="源码推送.png"></p><p><strong>此时打开Gitee的hexo源码仓库便可以看见整个文件夹内容都已经存进仓库：</strong><br><img src="https://i.loli.net/2020/10/31/1FISJNYqLmoXnaH.png" alt="仓库.png"></p></li></ol><h2 id="新终端配置"><a href="#新终端配置" class="headerlink" title="新终端配置"></a>新终端配置</h2><ol><li><strong>参考<a href="https://blog.molipre.com/posts/b016f2f1.html">从零开始的个人博客搭建(Win10篇)</a>软件安装和密钥配置部分，安装好 <code>Git</code> 和  <code>Node.js</code> 两个软件，以及安装好  <code>hexo</code> 和配置好密钥。</strong><div class="note info flat"><p>关于密钥部分，新终端完成密钥部署后，把之前备份好的公钥 <code>id_rsa.pub</code> 复制，粘贴替换 <code>.ssh</code> 文件夹内的 <code>id_rsa.pub</code> 文件，<code>.ssh</code> 文件夹位置 <code>C:\Users或用户\用户名</code> 里。</p></div></li><li><strong>在新终端任意位置创建文件夹 <code>hexoblog</code> ，进入文件，右键点击 <code>Git Bsah Here</code> ，输入以下命令：</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">git init</span><br><span class="line"><span class="comment">#git初始化</span></span><br><span class="line">git remote add origin git@gitee.com:molipre/hexo-source-code.git</span><br><span class="line"><span class="comment">#添加远程仓库</span></span><br><span class="line">git <span class="built_in">clone</span> https://gitee.com/molipre/molipre.git</span><br><span class="line"><span class="comment">#从远处仓库上克隆博客源码(该步骤仅在新终端第一次部署时需要)</span></span><br><span class="line">npm install</span><br><span class="line">cnpm install</span><br><span class="line"><span class="comment">#选择其中一个命令即可，如已安装cnpm，建议用cnpm，速度快</span></span><br><span class="line"><span class="comment">#新终端新文件夹安装hexo依赖</span></span><br><span class="line">hexo clean&amp;&amp;hexo g&amp;&amp;hexo s</span><br><span class="line"><span class="comment">#编译本地hexo文件查看远程仓库拉取的博客源码是否有问题</span></span><br></pre></td></tr></table></figure><strong>至此，如无意外，新终端便成功同步上一个终端的博客源码。</strong></li></ol><h1 id="博客管理相关命令"><a href="#博客管理相关命令" class="headerlink" title="博客管理相关命令"></a>博客管理相关命令</h1><h2 id="发布博客后同步"><a href="#发布博客后同步" class="headerlink" title="发布博客后同步"></a>发布博客后同步</h2><ul><li><strong>在B电脑发布完博客之后，记得将博客备份同步到远程仓库。</strong></li><li><strong>执行以下命令：</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line"><span class="comment">#添加目录下所有文件</span></span><br><span class="line"><span class="comment">#可以用git master 查看更改内容</span></span><br><span class="line">git commit -m <span class="string">&quot;更新信息&quot;</span></span><br><span class="line"><span class="comment">#提交并添加更新说明</span></span><br><span class="line">git push -u origin master</span><br><span class="line"><span class="comment">#推送更新到远程仓库</span></span><br><span class="line"><span class="comment">#以后每次提交可以直接git push</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="同步管理"><a href="#同步管理" class="headerlink" title="同步管理"></a>同步管理</h2><ul><li><strong>每次想写博客时，先执行：<code>git pull</code> 进行同步更新，发布完文章后同样按照上面的 <code>发布博客后同步</code> 同步到远程仓库。</strong></li></ul><h2 id="常用命令整理"><a href="#常用命令整理" class="headerlink" title="常用命令整理"></a>常用命令整理</h2><ul><li><strong>持续更新</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">git pull</span><br><span class="line"><span class="comment">#同步更新</span></span><br><span class="line">hexo new post <span class="string">&quot;新建文章&quot;</span></span><br><span class="line"><span class="comment">#简写形式 hexo n &quot;新建文章&quot;</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment">#清除旧的public文件夹</span></span><br><span class="line">hexo generate</span><br><span class="line"><span class="comment">#生成静态文件 简写形式 hexo g</span></span><br><span class="line">hexo deploy</span><br><span class="line"><span class="comment">#发布到github上 简写形式 hexo d</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment">#添加更改文件到缓存区</span></span><br><span class="line">git commit -m <span class="string">&quot;更新说明&quot;</span></span><br><span class="line"><span class="comment">#提交到本地仓库</span></span><br><span class="line">git push -u origin master</span><br><span class="line"><span class="comment">#推送到远程仓库进行备份</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><ul><li><strong>祝大家成功部署。</strong></li></ul><p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p>]]></content>
    
    
    <summary type="html">不同的设备之间如何部署和使用同一个博客(自我使用备份)</summary>
    
    
    
    <category term="博客の美化" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/"/>
    
    <category term="Hexo👾" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/Hexo%F0%9F%91%BE/"/>
    
    
    <category term="Hexo" scheme="https://blog.molipre.com/tags/Hexo/"/>
    
    <category term="Github" scheme="https://blog.molipre.com/tags/Github/"/>
    
    <category term="Gitee" scheme="https://blog.molipre.com/tags/Gitee/"/>
    
    <category term="博客搭建" scheme="https://blog.molipre.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="多终端" scheme="https://blog.molipre.com/tags/%E5%A4%9A%E7%BB%88%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>从零开始的个人博客搭建(MacOS篇)</title>
    <link href="https://blog.molipre.com/posts/74231343.html"/>
    <id>https://blog.molipre.com/posts/74231343.html</id>
    <published>2020-10-03T06:22:55.000Z</published>
    <updated>2020-11-02T02:20:40.988Z</updated>
    
    <content type="html"><![CDATA[<p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p>]]></content>
    
    
    <summary type="html">MacOS系统下本地部署Hexo个人博客并上传同步到Github Pages（主要是给自己看）</summary>
    
    
    
    <category term="博客の美化" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/"/>
    
    <category term="Hexo👾" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/Hexo%F0%9F%91%BE/"/>
    
    
    <category term="Hexo" scheme="https://blog.molipre.com/tags/Hexo/"/>
    
    <category term="Github" scheme="https://blog.molipre.com/tags/Github/"/>
    
    <category term="博客搭建" scheme="https://blog.molipre.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="MacOS" scheme="https://blog.molipre.com/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>从零开始的个人博客搭建(Win10篇)</title>
    <link href="https://blog.molipre.com/posts/b016f2f1.html"/>
    <id>https://blog.molipre.com/posts/b016f2f1.html</id>
    <published>2020-10-01T09:12:35.000Z</published>
    <updated>2020-11-02T02:20:47.506Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><div class="hide-toggle" style="border: 1px solid bg">  <div class="hide-button toggle-title" style="background-color: bg">    <i class="fas fa-caret-right fa-fw"></i><span>关于第一篇文章以及博客搭建的想法，不建议看</span>  </div>  <div class="hide-content">    <ul>      <div class="note blue paperclip flat"><p>第一次知道博客是各个平台现成的博客，例如CSDN，博客园之类的，毕竟以前查资料就会经常去别人的博客看看，自己也有一个平台博客，但是后面觉得太丑用了，再往以后的某一天，我在网上 查找关于路由器刷机的文章的时候，翻到了一个博客，样式很精美，我现在已经不记得它使用的是什么主题了，但还是记得是使用 <code>Hexo</code> 这个框架。</p></div>      <div class="note yellow paperclip flat"><p>再后来我买了个学生服务器开始搭建博客，开始查资料搭建的是WordPress，后面因为服务器负荷太大，运行几个月后就关闭了博客，今年年初的时候再想起博客这件事，又开始折腾我的服务器，因为疫情和其他事情耽搁，终于在九月份开始了博客搭建，原本是放在服务器上的，不过因为域名备案的原因，就先用着 <code>Github Pages</code>。</p></div>    </ul>  </div></div><p><strong>第一篇文章写博客搭建的原因：</strong><br><strong>第一，记录一下自己搭建博客的过程；</strong><br><strong>第二，就是给完全没有经验的小白朋友一个教程，可以跟着一步一步完成自己的Hexo博客搭建；</strong><br><strong><del>第三，装装门面，实在不知道写什么玩意</del>。</strong></p><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><p><strong><p style="font-size:0.8rem">这篇博文主要分为三个部分：</p></strong></p><div class="note default flat"><p><big>第一部分：环境准备与安装<br>第二部分：Hexo的安装<br>第三部分：将博客部署到Github</big></p></div><h1 id="环境准备与安装"><a href="#环境准备与安装" class="headerlink" title="环境准备与安装"></a>环境准备与安装</h1><h2 id="Node-js和Git的安装"><a href="#Node-js和Git的安装" class="headerlink" title="Node.js和Git的安装"></a>Node.js和Git的安装</h2><p><strong>关于环境，指的是Hexo框架必备的Node.js以及版本控制软件Git，我的博客下载的是当时的最新版 <code>Node.js-v12.16.3</code> 和 <code>Git version 2.26.2.windows.1</code> ，不过版本基本不影响博客的安装使用，所以只需要到官网下载最新版本即可。</strong></p><ol><li><a href="https://nodejs.org/en/"><strong>Node.js</strong></a></li><li><a href="https://git-scm.com/"><strong>Git</strong></a></li></ol><div class="note yellow idea flat"><p>下载和安装非常简单，下载完双击打开后，一直点下一步即可，不过需要注意的是两个软件需要添加环境变量，在软件安装界面可以勾选添加，如果没有添加也不需要担心，我们手动添加即可。</p></div><ol start="3"><li><p><strong>检查环境是否正确安装</strong></p><ul><li><strong>win+r输入cmd打开，在cmd输入 <code>node -v</code> 与 <code>git --version</code> ，如果能输出信息则表示成功。</strong></li></ul><p><img src="https://i.loli.net/2020/10/27/UIaXMbK3ZBvHu1l.jpg" alt="查看版本"></p></li><li><p><strong>手动配置环境变量</strong></p><ul><li><strong>我的电脑→属性→高级系统设置→环境变量→在XXX的用户变量找到Path→编辑</strong></li><li><strong>然后将Git安装目录xxx/git/bin写在里边即可，具体以你的安装情况为主。</strong></li></ul><p><img src="https://i.loli.net/2020/10/27/To1aVGYqnFQrMeu.png" alt="属性"><br><img src="https://i.loli.net/2020/10/27/EMdfzLhFRbniqkZ.png" alt="环境变量"><br><img src="https://i.loli.net/2020/10/27/CQejnWUcyP2gBuv.png" alt="在XXX的用户变量找到Path"></p></li></ol><h1 id="Hexo的安装"><a href="#Hexo的安装" class="headerlink" title="Hexo的安装"></a>Hexo的安装</h1><div class="note primary flat"><p><big><strong>关于Hexo，可以去<a href="https://hexo.io/zh-cn/">官网</a>看看，支持中文，且有详细的使用文档<br>当然，具体搭建可以看接下来的教程。</strong></big></p></div><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><div class="note blue paperclip flat"><p>多次使用npm都要等待很久，极其烦躁，换成cnpm舒服多了，具体也可以看看阿里云的<a href="https://developer.aliyun.com/mirror/NPM?from=tnpm">淘宝NPM镜像</a>，我就不说了。</p></div><p><strong>安装hexo会使用到npm，但因为npm的服务器在国外，npm安装会非常慢（使用xx上网的请忽略），甚至会出现下载安装失败，通常的解决办法是换淘宝镜像源，方法如下：</strong></p><ol><li><strong>win+r输入cmd打开，在cmd输入以下命令：</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"><span class="comment"># 将npm源替换为阿里的淘宝镜像源</span></span><br></pre></td></tr></table></figure></li><li><strong>每次使用 <code>npm</code> 命令时，把 <code>npm</code> 换成 <code>cnpm</code> 即可</strong></li></ol><h2 id="Hexo的安装与初始化"><a href="#Hexo的安装与初始化" class="headerlink" title="Hexo的安装与初始化"></a>Hexo的安装与初始化</h2><ol><li><p><strong>在你的电脑某个盘建立一个文件夹命名为：<code>hexoblog</code> ，不建议为系统盘（你要放系统盘我也不阻止）</strong></p></li><li><p><strong>进入 <code>hexoblog</code> 文件夹，右键点击 <code>Git Bash Here</code> ，在 <code>Git Bash</code> 输入以下命令：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br><span class="line"><span class="comment">#安装Hexo</span></span><br><span class="line">hexo -v</span><br><span class="line"><span class="comment">#查看Hexo版本号（判断是否安装成功）</span></span><br></pre></td></tr></table></figure><p><strong>具体如下图所示（红框内容是因为安装了butterfly主题，无需理会）</strong></p><p><img src="https://i.loli.net/2020/10/27/ArZhcSWK6glEtOG.png" alt="查看hexo版本"></p></li><li><p><strong>初始化Hexo，同样是在 <code>Git Bash</code> 输入以下命令：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line"><span class="comment">#初始化Hexo</span></span><br></pre></td></tr></table></figure><p><strong>看到如下图的结果就代表你已经完成了Hexo博客的初始化</strong></p><p><img src="https://i.loli.net/2020/10/27/D4yjIQRw6lSuTgO.png" alt="hexo初始化"></p><h2 id="查看Hexo博客与主题安装"><a href="#查看Hexo博客与主题安装" class="headerlink" title="查看Hexo博客与主题安装"></a>查看Hexo博客与主题安装</h2></li><li><p><strong>查看Hexo博客，在 <code>hexoblog</code> 文件夹右键点击 <code>Git Bash Here</code> ，输入以下命令：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line"><span class="comment">#清空缓存</span></span><br><span class="line">hexo generate</span><br><span class="line">hexo g <span class="comment">#简写</span></span><br><span class="line"><span class="comment">#重新编译</span></span><br><span class="line">hexo server</span><br><span class="line">hexo s <span class="comment">#简写</span></span><br><span class="line"><span class="comment">#打开本地访问</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/10/27/jQZMOLIKzAxHslp.png" alt="hexo s"></p><p><strong>看到上图所示的提示，那么此时打开浏览器输入 <code>http://127.0.0.1:4000</code> 即可查看到如下图所示的博客。</strong><br><img src="https://i.loli.net/2020/10/27/TNMVfvBHiXK2Gxc.png" alt="博客主页"></p></li><li><p><strong>安装主题</strong></p><ul><li><strong>我自己使用的主题是 <code>Butterfly</code> ，你可以到主题的<a href="https://github.com/jerryc127/hexo-theme-butterfly">Github地址</a>下载，将下载好的 <code>hexo-theme-butterfly-dev.zip</code> 文件解压后重命名为 <code>butterfly</code> 并放入 <code>hexoblog\themes</code> 中即可，关于此主题的更多内容请参考<a href="https://demo.jerryc.me/">主题文档</a>。</strong></li><li><strong>当然，你也可以在 <code>hexoblog</code> 文件夹右键点击 <code>Git Bash Here</code> 输入以下命令来安装 <code>Butterfly</code> 这个主题：</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure></li><li><strong>如果你没有选择此主题，请注意你所选用的主题是否需要放在 <code>hexoblog\themes</code> 文件里。</strong></li><li><strong>主题选择完请按照主题的官方文档进行配置。</strong></li></ul></li></ol><h1 id="将博客部署到Github"><a href="#将博客部署到Github" class="headerlink" title="将博客部署到Github"></a>将博客部署到Github</h1><h2 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a>注册Github账号</h2><p><strong>（如有Github账号请忽视本小节内容）</strong></p><ol><li><strong>访问<a herf="https://github.com/">Github官网</a>按照提示注册即可。</strong></li><li><strong>如注册过程中遇到 <code>Unable to verify your captcha response</code> 报错，请按照以下两种方法分别尝试：</strong><div class="note default flat"><p><strong>第一种，把Github的域名添加到你的hosts文件中，操作方法自行百度。</strong><br><strong>第二种，使用XX上网，至于XX上网是什么，请自行百度。</strong></p></div></li></ol><h2 id="创建仓库和配置密钥"><a href="#创建仓库和配置密钥" class="headerlink" title="创建仓库和配置密钥"></a>创建仓库和配置密钥</h2><ol><li><strong>在Github首页右上角点击 <code>+</code> ，找到 <code>New repositories</code> 并点击，进入 <code>Create a new repository</code> ，在 <code>Repository name</code> 填写 <code>username.github.io</code> （username是你的账号名)，其他默认就行，最后点击 <code>Create repository</code> 就完成仓库创建。</strong><div class="note info flat"><p>关于为何要使用 <code>username.github.io</code> 作为仓库名，请查看Github相关资料：<a href="https://help.github.com/articles/user-organization-and-project-pages/">About GitHub Pages</a></p></div></li><li><strong>创建密钥对</strong><ul><li><strong>在 <code>hexoblog</code> 文件夹右键点击 <code>Git Bash Here</code> 输入以下命令：</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Your Github Name&quot;</span></span><br><span class="line"><span class="comment">#配置用户名</span></span><br><span class="line">git config --global user.email <span class="string">&quot;Your Github Email&quot;</span></span><br><span class="line"><span class="comment">#配置邮箱</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;Your Github Email&quot;</span></span><br><span class="line"><span class="comment">#生成密钥，-C后面加邮箱，是为了公钥被github认可</span></span><br></pre></td></tr></table></figure></li><li><strong>生成密钥的命令输入后只需要不断回车即可。</strong></li><li><strong>密钥生成以后，默认位置是在用户文件的 <code>.ssh</code> 文件夹内，在Windows上就在 <code>C:\Users或用户\用户名</code> 里，打开 <code>.ssh</code> 就能看到私钥：<code>id_rsa</code> 和公钥：<code>id_rsa.pub</code> 。</strong></li></ul></li><li><strong>在Github上配置公钥</strong><ul><li><strong>把上面找到的公钥：<code>id_rsa.pub</code> 用记事本或者编辑打开，复制如下图内容</strong><br><br><img src="https://i.loli.net/2020/10/28/Yv3xe98rkzwnNqK.png" alt="密钥"></li><li><strong>接着打开<a href="https://github.com/">Github</a>，点击 <code>头像</code> ，点击 <code>settings</code> ，在设置页面找到 <code>SSH and GPG keys</code> ，点击 <code>New SSH key</code> 按照下图的1、2、3操作即可。</strong><br><img src="https://i.loli.net/2020/10/28/4PJAYrQkyhCB2Hz.png" alt="添加密钥"></li><li><strong>点击完成后，在git bash测试sshkey是否添加成功，输入一下命令：</strong><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></li><li><strong>得到类似下图的反馈便是成功连接：</strong><br><img src="https://i.loli.net/2020/10/28/dnSOUtGl4jo8Qhx.jpg" alt="成功连接"><div class="hide-toggle" style="border: 1px solid bg"><div class="hide-button toggle-title" style="background-color: bg">  <i class="fas fa-caret-right fa-fw"></i><span>可能会遇到的BUG</span></div><div class="hide-content">  <ul>   在输入上述测试命令后出现以下报错提示：   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh: connect to host gitee.com port 22: Connection timed out</span><br></pre></td></tr></table></figure>   主要原因是默认的SSH端口号22被占用或被修改，那么只需要测试命令加上你的端口号即可，如下所示：   <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@ssh.github.com -p 端口号</span><br><span class="line"><span class="comment">#-p 端口号 可以表示为 -p 11111，端口号范围1~65535，但请避开一下默认端口</span></span><br></pre></td></tr></table></figure>  </ul></div></div></li></ul></li></ol><h2 id="配置本地站点配置文件"><a href="#配置本地站点配置文件" class="headerlink" title="配置本地站点配置文件"></a>配置本地站点配置文件</h2><ol><li><p><strong>打开你的 <code>hexoblog</code> 文件夹，找到 <code>_config.yml</code> 文件，记事本或编辑器打开，找到 <code>deploy</code> 修改内容如下所示：</strong></p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repo:</span></span><br><span class="line">    <span class="attr">github:</span> <span class="string">git@github.com:username/username.github.io.git</span> <span class="comment">#username为你的Github用户名</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="提交本地博客到Github"><a href="#提交本地博客到Github" class="headerlink" title="提交本地博客到Github"></a>提交本地博客到Github</h2><ol><li><p><strong>上述全部配置完成后，打开你的 <code>hexoblog </code>文件夹右键点击 <code>Git Bash Here</code> 输入以下命令：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></li><li><p><strong>如无意外，浏览器输入 <code>username.github.io</code> 即可访问你的博客了。</strong></p><div class="hide-toggle" style="border: 1px solid bg"><div class="hide-button toggle-title" style="background-color: bg"> <i class="fas fa-caret-right fa-fw"></i><span>如有意外，请查看是否符合以下报错：</span></div><div class="hide-content"> <ul> 在输入1中的命令后出现以下报错提示：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure>  主要原因是是没有安装自动部署插件，那么只需要以下命令安装即可，如下所示：  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>  等待插件安装完成，然后再次输入1中的命令即可。 </ul></div></div></li></ol><h1 id="完结"><a href="#完结" class="headerlink" title="完结"></a>完结</h1><ul><li><strong>文章结束当然要写个结束语了，毫无意外，这就是我的第一篇博客文章了，当然只是Hexo这个博客搭建起来的后的第一篇博文，希望你能看的清晰，愉快的搭建起自己的博客，再见👋。</strong></li></ul><p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p><!-- <a class="btn-beautify button--animated blue block right larger" href="https://blog.molipre.com/posts/74231343.html"   title="从零开始的个人博客搭建(MacOS篇)"><i class="far fa-hand-point-right fa-fw"></i><span>从零开始的个人博客搭建(MacOS篇)</span></a> --><!-- <p style="font-size:1.2rem;font-weight:700"><strong>如需在MacOS部署请查看MacOS篇。</strong></p> -->]]></content>
    
    
    <summary type="html">Win10系统下本地部署Hexo个人博客并上传同步到Github Pages（主要是给自己看）</summary>
    
    
    
    <category term="博客の美化" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/"/>
    
    <category term="Hexo👾" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/Hexo%F0%9F%91%BE/"/>
    
    
    <category term="Hexo" scheme="https://blog.molipre.com/tags/Hexo/"/>
    
    <category term="Github" scheme="https://blog.molipre.com/tags/Github/"/>
    
    <category term="博客搭建" scheme="https://blog.molipre.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="Win10" scheme="https://blog.molipre.com/tags/Win10/"/>
    
  </entry>
  
</feed>

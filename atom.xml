<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>一川·MOLIPRE·BLOG</title>
  <icon>https://www.gravatar.com/avatar/313fee614a2feb83f1f78d54aca36e10</icon>
  <subtitle>读万卷书，行万里路</subtitle>
  <link href="https://blog.molipre.com/atom.xml" rel="self"/>
  
  <link href="https://blog.molipre.com/"/>
  <updated>2020-11-18T16:00:00.000Z</updated>
  <id>https://blog.molipre.com/</id>
  
  <author>
    <name>一川</name>
    <email>819591739@qq.com</email>
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Butterfly主题魔改之导航栏</title>
    <link href="https://blog.molipre.com/posts/9197e975.html"/>
    <id>https://blog.molipre.com/posts/9197e975.html</id>
    <published>2020-11-18T16:00:00.000Z</published>
    <updated>2020-11-18T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h3><ol><li><strong>电脑端</strong><br><img src="https://i.loli.net/2020/11/19/BCQbkTuw9ahWpZs.png" alt="效果展示.png"></li><li><strong>手机端</strong><br><img src="https://i.loli.net/2020/11/19/A6LFJBY71XxuODs.jpg" alt="效果展示.jpg"></li></ol><h3 id="修改导航栏menu居中以及搜索居右"><a href="#修改导航栏menu居中以及搜索居右" class="headerlink" title="修改导航栏menu居中以及搜索居右"></a>修改导航栏menu居中以及搜索居右</h3><ol><li><strong>用编辑器打开 <code>themes\butterfly\source\css\_layout\head.styl</code> 文件，找到如图所示内容：</strong><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.menus_items</span></span><br><span class="line">   <span class="selector-tag">display</span>: <span class="selector-tag">inline</span></span><br></pre></td></tr></table></figure></li><li><strong>修改内容如下：</strong><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="selector-class">.menus_items</span></span><br><span class="line">  <span class="selector-tag">display</span>: <span class="selector-tag">inline</span></span><br><span class="line">  <span class="selector-tag">position</span>: <span class="selector-tag">absolute</span></span><br><span class="line">  <span class="selector-tag">width</span>: 400<span class="selector-tag">px</span>    </span><br><span class="line">  <span class="selector-tag">text-align</span>: <span class="selector-tag">center</span>   </span><br><span class="line">  <span class="selector-tag">left</span>: 0</span><br><span class="line">  <span class="selector-tag">right</span>: 0</span><br><span class="line">  <span class="selector-tag">margin</span>: <span class="selector-tag">auto</span></span><br></pre></td></tr></table></figure><div class="note blue quote flat"><p><strong>上述css样式方案复制于<a href="https://blog.zhheo.com/">Heo</a>，可以去关注一下<a href="https://blog.zhheo.com/">他的博客</a>，其他方案还在修改中，完善后会更新本文。</strong></p></div></li></ol><h3 id="自定义munu始终居于右边"><a href="#自定义munu始终居于右边" class="headerlink" title="自定义munu始终居于右边"></a>自定义munu始终居于右边</h3><ol><li><strong>用编辑器打开 <code>themes\butterfly\layout\includes\header\nav.pug</code> 文件，找到如图所示内容：</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nav#nav</span><br><span class="line">  span#blog_name</span><br><span class="line">    a#site-name(href&#x3D;url_for(&#39;&#x2F;&#39;)) #[&#x3D;config.title]</span><br><span class="line"></span><br><span class="line">  span#menus</span><br><span class="line">    if (theme.algolia_search.enable || theme.local_search.enable)</span><br><span class="line">      #search_button</span><br><span class="line">        a.site-page.social-icon.search</span><br><span class="line">          i.fas.fa-search.fa-fw</span><br><span class="line">        span&#x3D;&#39; &#39;+_p(&#39;search&#39;)</span><br><span class="line">  !&#x3D;fragment_cache(&#39;menus&#39;, function()&#123;return partial(&#39;includes&#x2F;header&#x2F;menu_item&#39;)&#125;)</span><br><span class="line"></span><br><span class="line">  span#toggle-menu.close</span><br><span class="line">    a.site-page</span><br><span class="line">      i.fas.fa-bars.fa-fw</span><br></pre></td></tr></table></figure></li><li><strong>修改为如下所示：</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">nav#nav</span><br><span class="line">  span#blog_name</span><br><span class="line">    a#site-name(href&#x3D;url_for(&#39;&#x2F;&#39;)) #[&#x3D;config.title]</span><br><span class="line"></span><br><span class="line">  span#menus</span><br><span class="line">    if (theme.algolia_search.enable || theme.local_search.enable)</span><br><span class="line">      #search_button</span><br><span class="line">        a.site-page.social-icon.search</span><br><span class="line">          i.fas.fa-search.fa-fw</span><br><span class="line">        span&#x3D;&#39; &#39;+_p(&#39;search&#39;)</span><br><span class="line">      #search_button</span><br><span class="line">        a.site-page.(href&#x3D;&#39;url&#39;)</span><br><span class="line">        &#x2F;&#x2F;其中url为链接内容，如：https:&#x2F;&#x2F;blog.molipre.com或博客内嵌页面 &#x2F;about&#x2F; 等</span><br><span class="line">          i.fas.xxxxx.fa-fw</span><br><span class="line">          &#x2F;&#x2F;其中xxxxx可以为Font Awesome图标格式，如fa-search</span><br><span class="line">        span&#x3D;&#39; &#39;+&#39;xxxx&#39;</span><br><span class="line">        &#x2F;&#x2F;其中xxxx为自定义的内容，如效果图中的 &#39;个人主页&#39; 等</span><br><span class="line">  !&#x3D;fragment_cache(&#39;menus&#39;, function()&#123;return partial(&#39;includes&#x2F;header&#x2F;menu_item&#39;)&#125;)</span><br><span class="line"></span><br><span class="line">  span#toggle-menu.close</span><br><span class="line">    a.site-page</span><br><span class="line">      i.fas.fa-bars.fa-fw</span><br></pre></td></tr></table></figure></li></ol><h3 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h3><ul><li><strong>本次魔改都是根据我博客自身来修改的，建议参考修改，而不是复制，不一定所有人都适用。</strong></li><li><strong>最后祝大家魔改成功，再见👋。</strong></li></ul><p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p>]]></content>
    
    
    <summary type="html">修改导航栏menu居中&lt;br&gt;修改导航栏搜索按钮始终居于右边&lt;br&gt;自定义munu始终居于右边</summary>
    
    
    
    <category term="博客の美化" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/"/>
    
    <category term="Butterfly🦋" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/Butterfly%F0%9F%A6%8B/"/>
    
    
    <category term="Hexo" scheme="https://blog.molipre.com/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://blog.molipre.com/tags/Butterfly/"/>
    
    <category term="主题魔改" scheme="https://blog.molipre.com/tags/%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/"/>
    
    <category term="导航栏" scheme="https://blog.molipre.com/tags/%E5%AF%BC%E8%88%AA%E6%A0%8F/"/>
    
  </entry>
  
  <entry>
    <title>戴尔R740服务器安装centos7.8系统</title>
    <link href="https://blog.molipre.com/posts/a0198444.html"/>
    <id>https://blog.molipre.com/posts/a0198444.html</id>
    <published>2020-11-17T01:55:58.000Z</published>
    <updated>2020-11-16T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li>系统安装大家应该比较熟悉的就是Windows系统的安装，使用一个U盘制作成PE启动盘或者直接制作成微软的的启动盘，然后安装镜像，过程不算难，甚至有些PE系统会有一键安装的选项。不过Linux和windows不同，我们用虚拟机安装Linux系统时，例如VMware，把镜像加载就可以正常启动系统了，在物理机上，如果使用镜像光盘，因为读取速度的原因，安装过程及其漫长，如果使用U盘，可能会出现无法识别U盘里面的Linux镜像等问题，各种问题都有，因此我下面借用戴尔R740服务器演示一遍Linux系统的安装，本次安装的物理机因为是服务器，可能会和平常的PC或者笔记本有些许不一样。</li></ul><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ol><li><strong>centos7.8 系统镜像 (<a href="https://mirrors.aliyun.com/centos/7.8.2003/isos/x86_64/">点击去下载</a>)</strong></li><li><strong>U盘写入镜像的软件 (<a href="https://cn.ultraiso.net/xiazai.html">UltraISO软碟通</a>)</strong></li><li><strong>一个容量为16GB的U盘</strong></li><li><strong>戴尔R740服务器</strong> (<font color="red">物理机即可</font>)</li><li><strong>显示器、显示器线材、鼠标、键盘</strong></li></ol><h2 id="镜像U盘制作"><a href="#镜像U盘制作" class="headerlink" title="镜像U盘制作"></a>镜像U盘制作</h2><ol><li><strong>打开UltraISO软碟通，点击 <code>文件</code> → <code>打开</code> 选中下载好的镜像。</strong><br><img src="https://i.loli.net/2020/11/17/dvjbazIgiMVY4mE.png" alt="ultraiso.PNG"><br><img src="https://i.loli.net/2020/11/17/cfgNBpEjn9ydPKM.png" alt="ultraiso1.PNG"></li><li><strong>点击 <code>启动</code> → <code>写入硬盘镜像</code>，选择你要写入的U盘，再点击 <code>写入</code>，等待写入完成即可。</strong><br><img src="https://i.loli.net/2020/11/17/cb7XoB3s4U8HEPt.png" alt="ultraiso2.PNG"><br><img src="https://i.loli.net/2020/11/17/z3UaRW6ryuBNKmd.png" alt="ultraiso3.PNG"></li></ol><h2 id="安装系统"><a href="#安装系统" class="headerlink" title="安装系统"></a>安装系统</h2><ol><li><strong>将已经写入镜像成功的U盘插进你要安装的物理机</strong>（<font color="red">我这边就是戴尔R740服务器</font>)<strong>，出现图1的画面按住 <code>F11</code> 再按回车键进入 <code>Boot Manager</code> ，选择 <code>One-shaot UEFIBoot Menu</code> 按回车键进入图3的界面，然后选择你制作好的镜像U盘按回车键即可。</strong><br><img src="https://i.loli.net/2020/11/17/7OL4tMh1iqsyBk3.jpg" alt="图1"><br><img src="https://i.loli.net/2020/11/17/nhRgIv7ibz2TaXf.jpg" alt="图2"><br><img src="https://i.loli.net/2020/11/17/E7QmSBf6RvqiVh8.jpg" alt="图3"></li><li><strong>上述最后一步完成后等待一会会出现图1的界面，光标移至 <code>Install Centos 7</code>，按回车键。</strong><br><img src="https://i.loli.net/2020/11/17/HK98aotZdN7IMgz.jpg" alt="图1"></li></ol><ul><li><p><strong>如果出现图2界面，按回车键并等待一会进入图3的命令行界面</strong><br><img src="https://i.loli.net/2020/11/17/dRbI71uVBUgnvGH.jpg" alt="图2"><br><img src="https://i.loli.net/2020/11/17/J5w6CL2Q8dsOg4Z.jpg" alt="图3"></p></li><li><p><strong>在命令行输入以下命令查看已经挂载的设备盘符分配情况，可以看到我的U盘为 <code>sdc4</code> (每个设备都可能不一样，但一般是sdb开头的)，记住这个 <code>sdc4</code> ，然后输入 <code>reboot</code> 重启服务器。</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ls</span><br><span class="line"><span class="comment">#列出目前工作目录所含之文件及子目录</span></span><br><span class="line"><span class="built_in">cd</span> /dev</span><br><span class="line"><span class="comment">#切换当前工作目录到dev</span></span><br><span class="line">ls</span><br><span class="line"><span class="comment">#列出dev目录所含之文件及子目录</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/17/BxwLRSUdI9fKTQW.jpg" alt="图4"></p></li><li><p><strong>服务器重启后，重复安装系统的第一步，再次看见图1界面，光标移至 <code>Install Centos 7</code>，按键盘的 <code>e</code> 进入修改界面，将下图图5中的内容修改如图6所示，然后按 <code>Ctrl + x</code> 保存，回到图1界面后再按回车键，即可进入图7的centos系统的图形化安装界面。</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">修改下列命令：</span><br><span class="line">Linuxefi /images/pxeboot/vmlinuz inst.stage22=hd:LABEL=CentOS\x207\x20x\86_64 quiet</span><br><span class="line">更改为：</span><br><span class="line">Linuxefi /images/pxeboot/vmlinuzinst.stage22=hd:/dev/sdc4 quiet</span><br><span class="line"><span class="comment">#sdc4为我的U盘盘符，使用时请修改为你的U盘盘符</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/17/SPW4UdL9q2v3iMO.jpg" alt="图5"><br><img src="https://i.loli.net/2020/11/17/kJiLQwqxOjMaDIr.jpg" alt="图6"><br><img src="https://i.loli.net/2020/11/17/nNP7RkzDM2a9htQ.png" alt="图7"></p><details ><summary> <p>平常的PC设置</p> </summary>              <div class='content'>              <p><strong>以技嘉主板为例</strong></p><p>1、U盘插入电脑的usb接口，开机，不断点按 <code>delete</code> 键，进入BIOS设置界面，找到 <code>BIOS功能</code> 选项，找到 <code>选择启动优先顺序</code> ，在 <code>启动优先权 #1</code> 选择你的U盘，然后按 <code>F10</code> 再按回车键即可。</p><p>2、出现图1的界面后，光标移至 <code>Install Centos 7</code>，按键盘的 <code>Tab</code> 键，出现图2可修改的内容。</p><p><img src="https://i.loli.net/2020/11/17/6xySCvpKLGRm1NO.jpg" alt="图1"><br><img src="https://i.loli.net/2020/11/17/qFb7pJfonZiB5ak.jpg" alt="图2"><br>3、修改图2内容如为图3所示内容并按回车键。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">修改下列命令：</span><br><span class="line">vmlinuz initrd=initrd.img inst.stage2=hd:LABEL=CentOS\x207\x20x8 quiet</span><br><span class="line">更改为：</span><br><span class="line">vmlinuz initrd=initrd.img linux dd quiet</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/17/JHKO8V7o9Ylf1jk.jpg" alt="图3"><br>4、出现图4界面，可以从卷名称 <code>CENTOS_7_64</code> 得知U盘，在这台电脑里面，识别到的盘符是 <code>sda4</code> ，若没有识别出来，可以输入 <code>r</code> ，按回车键，刷新一下即可。</p><p><img src="https://i.loli.net/2020/11/17/9RpFTDfy43rLPts.jpg" alt="图4"><br>5、接着重启电脑，直到重新出现图1的选择界面，光标移至 <code>Install Centos 7</code>，按键盘的 <code>Tab</code> 键，修改内容如图5所示，按回车键即可。</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">修改下列命令：</span><br><span class="line">vmlinuz initrd=initrd.img inst.stage2=hd:LABEL=CentOS\x207\x20x8 quiet</span><br><span class="line">更改为：</span><br><span class="line">vmlinuz initrd=initrd.img inst.stage2=hd:/dev/sda4 quiet</span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/11/17/yweisR8rYoQM6bc.jpg" alt="图5"></p>              </div>            </details></li></ul><h2 id="centos7图形化安装操作"><a href="#centos7图形化安装操作" class="headerlink" title="centos7图形化安装操作"></a>centos7图形化安装操作</h2><ul><li><strong>关于centos图形化安装的操作就不多说，跟着操作提示操作即可，不懂得话，网上也有很多资料，搜索一下即可。</strong></li><li><strong>如果将来很闲的话，可能会补充这部分内容吧，毕竟挺简单的。</strong></li><li><strong>最好选择语言为<font color="red">英文</font>。</strong></li><li><strong>接下来说一下分区方案。</strong></li></ul><h1 id="分区操作步骤"><a href="#分区操作步骤" class="headerlink" title="分区操作步骤"></a>分区操作步骤</h1><ol><li><strong>点击下图红框选项。</strong><br><img src="https://i.loli.net/2020/11/17/Dyh5roFsNeM9m4L.png" alt="centos13.png"></li><li><strong>进入下图页面，如果你有几块硬盘，先选择你要安装系统的硬盘，然后选择红框的 <code>I will configure partitioning.</code> ，再点击两次 <code>done</code> 即可进入分区界面。</strong><br><img src="https://i.loli.net/2020/11/17/B7q6KzAbRoE9DYh.png" alt="centos14.png"></li></ol><h1 id="分区方案"><a href="#分区方案" class="headerlink" title="分区方案"></a>分区方案</h1><ul><li><strong>关于Linux安装系统时的分区，如果你是新手，请记住：<font color="red">除了SWAP分区外，其他分区的文件系统一律选择ext4类型,设备类型默认选LVM</font>。</strong></li><li><strong>新手第一次操作安装的时候，也可以选择centos图形化安装提供的自动创建分区，即在分区界面点击 <code>Click here to create them automatically</code> 即可让安装程序帮忙分区。</strong></li><li><strong>如果你操作娴熟，大概也不会看到这篇文章，当然下面的分区方案还是具备一定的参考价值的。</strong></li><li><strong>以下分区以一块480G固态硬盘为例：</strong></li></ul><ol><li><strong>boot分区</strong><ul><li><strong>作用：</strong>引导分区，包含了系统启动的必要内核文件，即使根分区顺坏也能正常引导启动 一般这些文件所占空间在200M以下。</li><li><strong>分区建议：</strong>分区的时候可分配200M，如果空间足够用，可以在500M-1G之间选择，避免由于长期使用的冗余文件塞满这个分区。我这边选择分配2G。</li><li><strong>分区格式：</strong>建议ext4，按需求更改。</li></ul></li><li><strong><code>/</code>分区（根分区）</strong><ul><li><strong>作用：</strong>类似Windows的C盘，所有文件（包括设备也当文件处理）都在 <code>/</code> 下，“分区”也可以在 <code>/</code> 下找到，存放系统命令和用户数据等。</li><li><strong>分区建议：</strong>建议分配15G以上，看需求，根分区和home分区的大小就类似C盘和D盘的空间分布一样，主要占空间在哪儿就在那里分大容量。我这边选择分配100G。</li><li><strong>分区格式：</strong>建议ext4，按需求更改。</li></ul></li><li><strong>swap分区</strong><ul><li><strong>作用：</strong>类似于Windows的虚拟内存，在内存不够用时占用硬盘的虚拟内存来进行临时数据的存放，而对于linux就是swap分区。</li><li><strong>分区建议：</strong>建议是物理内存大小的2倍，比如你电脑是4G的物理内存，swap分区可以是8G。我这边服务器是16G内存，则选择分配32G。</li><li><strong>分区格式：</strong>swap格式。</li></ul></li><li><strong>var分区</strong><ul><li><strong>作用：</strong>用于log日志的文件的存放，如果不分则默认在/目录下。</li><li><strong>分区建议：</strong>如果你安装的linux是用于服务器或者经常做日志分析，请划分var分区，避免日志文件不断膨胀塞满导致根分区而引发问题。我这边是服务器，需要存放大量日志，因此分配10G。</li><li><strong>分区格式：</strong>建议ext4，按需求更改。</li></ul></li><li><strong>home分区</strong><ul><li><strong>作用：</strong>存放用户数据，HOME的结构一般是 HOME/userName/userFile，如果不分则默认在/目录下。</li><li><strong>分区建议：</strong>如果用户数据多可以将此分区适当增大，请参考“根分区”分区建议；一般硬盘的主要容量几乎都在Home分区和根分区下。我这边习惯存放数据到home分区，因此分配剩下的所有存储300G。</li><li><strong>分区格式：</strong>建议ext4，按需求更改。</li></ul></li></ol><ul><li><strong>戴尔R740服务器具体分区如下图：</strong><br><img src="https://i.loli.net/2020/11/17/1bSFOpX2l8WNZfY.jpg" alt="centos12.jpg"></li></ul><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><ul><li><strong>关于这篇文章写出来的缘由就是最近给公司的新服务器安装系统做SVN服务器，之前虽然给服务器装过很多次系统了，但总是会忘记一些操作步骤，因此写下这篇博文，记录一下自己的安装过程。</strong></li><li><strong>祝看到最后的朋友，都成功安装系统，再见👋。</strong></li></ul><p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p>]]></content>
    
    
    <summary type="html">从系统U盘开始为戴尔R740服务器安装centos7.8系统&lt;br&gt;（也适用于物理机安装centos系统）</summary>
    
    
    
    <category term="硬件相关" scheme="https://blog.molipre.com/categories/%E7%A1%AC%E4%BB%B6%E7%9B%B8%E5%85%B3/"/>
    
    <category term="戴尔R740" scheme="https://blog.molipre.com/categories/%E7%A1%AC%E4%BB%B6%E7%9B%B8%E5%85%B3/%E6%88%B4%E5%B0%94R740/"/>
    
    
    <category term="戴尔R740" scheme="https://blog.molipre.com/tags/%E6%88%B4%E5%B0%94R740/"/>
    
    <category term="服务器" scheme="https://blog.molipre.com/tags/%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="centos" scheme="https://blog.molipre.com/tags/centos/"/>
    
    <category term="系统安装" scheme="https://blog.molipre.com/tags/%E7%B3%BB%E7%BB%9F%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>20201114</title>
    <link href="https://blog.molipre.com/posts/741a6cf1.html"/>
    <id>https://blog.molipre.com/posts/741a6cf1.html</id>
    <published>2020-11-13T16:00:00.000Z</published>
    <updated>2020-11-13T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>2020年11月14日 星期六 天气 阴</strong><br>今早起来，微凉，愉快的穿上了最近新买的衣服，可能是因为新衣服带来的喜悦，今天的开始是愉悦的。</p><p>今天大概是轻松的一天，今晚和朋友约定在家吃火锅，对于一个孤独患者来说，还是很期待和朋友一起吃饭的。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;2020年11月14日 星期六 天气 阴&lt;/strong&gt;&lt;br&gt;今早起来，微凉，愉快的穿上了最近新买的衣服，可能是因为新衣服带来的喜悦，今天的开始是愉悦的。&lt;/p&gt;
&lt;p&gt;今天大概是轻松的一天，今晚和朋友约定在家吃火锅，对于一个孤独患者来说，还是很期待和朋</summary>
      
    
    
    
    <category term="学习&amp;随想" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/"/>
    
    <category term="随想💡" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/%E9%9A%8F%E6%83%B3%F0%9F%92%A1/"/>
    
    <category term="日记" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/%E9%9A%8F%E6%83%B3%F0%9F%92%A1/%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="日记" scheme="https://blog.molipre.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Butterfly主题魔改之footer</title>
    <link href="https://blog.molipre.com/posts/945b633d.html"/>
    <id>https://blog.molipre.com/posts/945b633d.html</id>
    <published>2020-11-11T16:00:00.000Z</published>
    <updated>2020-11-11T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="效果展示"><a href="#效果展示" class="headerlink" title="效果展示"></a>效果展示</h3><ol><li><strong>电脑端</strong><br><img src="https://i.loli.net/2020/11/12/OHAGDidomwuLPTz.png" alt="footer效果.png"></li><li><strong>手机端</strong><br><img src="https://i.loli.net/2020/11/19/YJPx3or1g6Zq4dS.jpg" alt="效果展示.jpg"></li></ol><h3 id="修改页脚处的“By”为跳动的爱心"><a href="#修改页脚处的“By”为跳动的爱心" class="headerlink" title="修改页脚处的“By”为跳动的爱心"></a>修改页脚处的“By”为跳动的爱心</h3><ol><li><strong>用编辑器打开 <code>/themes/Butterfly/layout/includes/footer.pug</code> 文件，如图所示：</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#footer-wrap</span><br><span class="line"> if theme.footer.owner.enable</span><br><span class="line">   - var now &#x3D; new Date()</span><br><span class="line">   - var nowYear &#x3D; now.getFullYear()</span><br><span class="line">   if theme.footer.owner.since &amp;&amp; theme.footer.owner.since !&#x3D; nowYear</span><br><span class="line">     .copyright!&#x3D; &#96;&amp;copy;$&#123;theme.footer.owner.since&#125; - $&#123;nowYear&#125; By $&#123;config.author&#125;&#96;</span><br><span class="line">   else</span><br><span class="line">     .copyright!&#x3D; &#96;&amp;copy;$&#123;nowYear&#125; By $&#123;config.author&#125;&#96;</span><br><span class="line"> if theme.footer.copyright</span><br><span class="line">   .framework-info</span><br><span class="line">     span&#x3D; _p(&#39;footer.framework&#39;) + &#39; &#39;</span><br><span class="line">     a(href&#x3D;&#39;https:&#x2F;&#x2F;hexo.io&#39;)&#x3D; &#39;Hexo&#39;</span><br><span class="line">     span.footer-separator |</span><br><span class="line">     span&#x3D; _p(&#39;footer.theme&#39;) + &#39; &#39;</span><br><span class="line">     a(href&#x3D;&#39;https:&#x2F;&#x2F;github.com&#x2F;jerryc127&#x2F;hexo-theme-butterfly&#39;)&#x3D; &#39;Butterfly&#39;</span><br><span class="line"> if theme.footer.custom_text</span><br><span class="line">   .footer_custom_text!&#x3D;&#96;$&#123;theme.footer.custom_text&#125;&#96;</span><br><span class="line"> if theme.footer.ICP.enable</span><br><span class="line">   .icp</span><br><span class="line">     a(href&#x3D;theme.footer.ICP.url)</span><br><span class="line">       if theme.footer.ICP.icon</span><br><span class="line">         img.icp-icon(src&#x3D;url_for(theme.footer.ICP.icon) alt&#x3D;&#39;ICP&#39;)</span><br><span class="line">     span&#x3D;theme.footer.ICP.text</span><br></pre></td></tr></table></figure></li><li><strong>将第8行内容：</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.copyright!&#x3D; &#96;&amp;copy;$&#123;nowYear&#125; By $&#123;config.author&#125;&#96;</span><br></pre></td></tr></table></figure><strong>改为如下内容即可</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">.copyright!&#x3D; &#96;&amp;copy; $&#123;nowYear&#125;&amp;nbsp;&lt;i style&#x3D;&quot;color:#FF6A6A;animation: announ_animation 0.8s linear infinite;&quot;class&#x3D;&quot;fas fa-heartbeat&quot;&gt;&lt;&#x2F;i&gt;  $&#123;config.author&#125;&#96;</span><br></pre></td></tr></table></figure></li><li><strong>如无其他魔改内容，直接复制下面内容替换原有代码即可：</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">#footer-wrap</span><br><span class="line"> if theme.footer.owner.enable</span><br><span class="line">   - var now &#x3D; new Date()</span><br><span class="line">   - var nowYear &#x3D; now.getFullYear()</span><br><span class="line">   if theme.footer.owner.since &amp;&amp; theme.footer.owner.since !&#x3D; nowYear</span><br><span class="line">     .copyright!&#x3D; &#96;&amp;copy;$&#123;theme.footer.owner.since&#125; - $&#123;nowYear&#125; By $&#123;config.author&#125;&#96;</span><br><span class="line">   else</span><br><span class="line">     .copyright!&#x3D; &#96;&amp;copy; $&#123;nowYear&#125;&amp;nbsp;&lt;i style&#x3D;&quot;color:#FF6A6A;animation: announ_animation 0.8s linear infinite;&quot;class&#x3D;&quot;fas fa-heartbeat&quot;&gt;&lt;&#x2F;i&gt;  $&#123;config.author&#125;&#96;</span><br><span class="line"> if theme.footer.copyright</span><br><span class="line">   .framework-info</span><br><span class="line">     span&#x3D; _p(&#39;footer.framework&#39;) + &#39; &#39;</span><br><span class="line">     a(href&#x3D;&#39;https:&#x2F;&#x2F;hexo.io&#39;)&#x3D; &#39;Hexo&#39;</span><br><span class="line">     span.footer-separator |</span><br><span class="line">     span&#x3D; _p(&#39;footer.theme&#39;) + &#39; &#39;</span><br><span class="line">     a(href&#x3D;&#39;https:&#x2F;&#x2F;github.com&#x2F;jerryc127&#x2F;hexo-theme-butterfly&#39;)&#x3D; &#39;Butterfly&#39;</span><br><span class="line"> if theme.footer.custom_text</span><br><span class="line">   .footer_custom_text!&#x3D;&#96;$&#123;theme.footer.custom_text&#125;&#96;</span><br><span class="line"> if theme.footer.ICP.enable</span><br><span class="line">   .icp</span><br><span class="line">     a(href&#x3D;theme.footer.ICP.url)</span><br><span class="line">       if theme.footer.ICP.icon</span><br><span class="line">         img.icp-icon(src&#x3D;url_for(theme.footer.ICP.icon) alt&#x3D;&#39;ICP&#39;)</span><br><span class="line">       span&#x3D;theme.footer.ICP.text</span><br></pre></td></tr></table></figure></li></ol><h3 id="在页脚处添加博客运行天数"><a href="#在页脚处添加博客运行天数" class="headerlink" title="在页脚处添加博客运行天数"></a>在页脚处添加博客运行天数</h3><ol><li><strong>打开主题配置文件<code>_config.butterfly.yml</code>，找到 <code>footer</code> 配置项添加时间栏，在 <code>custom_text</code> 添加 <code>&lt;a id=&quot;running-time&quot;&gt;&lt;/a&gt;</code> 即可，如果已经在此处写入过内容的，可以在合适的位置插入a标签。</strong><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">footer:</span></span><br><span class="line">  <span class="attr">owner:</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">    <span class="attr">since:</span> <span class="number">2020</span></span><br><span class="line">  <span class="attr">custom_text:</span> <span class="string">&lt;a</span> <span class="string">id=&quot;running-time&quot;&gt;&lt;/a&gt;</span></span><br><span class="line">  <span class="attr">copyright:</span> <span class="literal">true</span> <span class="comment"># Copyright of theme and framework</span></span><br><span class="line">  <span class="attr">ICP:</span> <span class="comment"># Chinese ICP License</span></span><br><span class="line">    <span class="attr">enable:</span> <span class="literal">false</span></span><br><span class="line">    <span class="attr">url:</span></span><br><span class="line">    <span class="attr">text:</span></span><br><span class="line">    <span class="attr">icon:</span> <span class="string">/img/icp.png</span></span><br></pre></td></tr></table></figure></li><li><strong>在 <code>\themes\butterfly\source\js\</code> 目录下新建 <code>runtime.js</code> 文件，内容如下：</strong><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="built_in">setInterval</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> create_time = <span class="built_in">Math</span>.round(<span class="keyword">new</span> <span class="built_in">Date</span>(<span class="string">&#x27;xxxx&#x27;</span>).getTime() / <span class="number">1000</span>);</span><br><span class="line">    <span class="comment">//new Date里面的xxxxxx为起始时间，格式：2020-11-12 00:00:00。</span></span><br><span class="line">    <span class="keyword">let</span> timestamp = <span class="built_in">Math</span>.round((<span class="keyword">new</span> <span class="built_in">Date</span>().getTime() + <span class="number">8</span> * <span class="number">60</span> * <span class="number">60</span> * <span class="number">1000</span>) / <span class="number">1000</span>);</span><br><span class="line">    <span class="keyword">let</span> second = timestamp - create_time;</span><br><span class="line">    <span class="keyword">let</span> time = <span class="keyword">new</span> <span class="built_in">Array</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="comment">//年</span></span><br><span class="line">    <span class="keyword">if</span> (second &gt;= <span class="number">365</span> * <span class="number">24</span> * <span class="number">3600</span>) &#123;</span><br><span class="line">      time[<span class="number">0</span>] = <span class="built_in">parseInt</span>(second / (<span class="number">365</span> * <span class="number">24</span> * <span class="number">3600</span>));</span><br><span class="line">      second %= <span class="number">365</span> * <span class="number">24</span> * <span class="number">3600</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//天</span></span><br><span class="line">    <span class="keyword">if</span> (second &gt;= <span class="number">24</span> * <span class="number">3600</span>) &#123;</span><br><span class="line">      time[<span class="number">1</span>] = <span class="built_in">parseInt</span>(second / (<span class="number">24</span> * <span class="number">3600</span>));</span><br><span class="line">      second %= <span class="number">24</span> * <span class="number">3600</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//时</span></span><br><span class="line">    <span class="keyword">if</span> (second &gt;= <span class="number">3600</span>) &#123;</span><br><span class="line">      time[<span class="number">2</span>] = <span class="built_in">parseInt</span>(second / <span class="number">3600</span>);</span><br><span class="line">      second %= <span class="number">3600</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//分</span></span><br><span class="line">    <span class="keyword">if</span> (second &gt;= <span class="number">60</span>) &#123;</span><br><span class="line">      time[<span class="number">3</span>] = <span class="built_in">parseInt</span>(second / <span class="number">60</span>);</span><br><span class="line">      second %= <span class="number">60</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//秒</span></span><br><span class="line">    <span class="keyword">if</span> (second &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      time[<span class="number">4</span>] = second;</span><br><span class="line">    &#125;</span><br><span class="line">    currentTimeHtml = <span class="string">&#x27;xxxxxx&#x27;</span> + <span class="string">&#x27; &#x27;</span> + time[<span class="number">0</span>] + <span class="string">&#x27; 年 &#x27;</span> + time[<span class="number">1</span>] + <span class="string">&#x27; 天 &#x27;</span> + time[<span class="number">2</span>] + <span class="string">&#x27; 时 &#x27;</span> + time[<span class="number">3</span>] + <span class="string">&#x27; 分 &#x27;</span> + time[<span class="number">4</span>] + <span class="string">&#x27; 秒&#x27;</span>;</span><br><span class="line">    <span class="comment">//xxxxxx可随意定义，中英文都可，例如&quot;一川的奇思怪想屋运行了&quot;</span></span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">&quot;running-time&quot;</span>).innerHTML = currentTimeHtml;</span><br><span class="line">  &#125;, <span class="number">1000</span>);</span><br></pre></td></tr></table></figure></li><li><strong>打开主题配置文件<code>_config.butterfly.yml</code>，找到 <code>inject</code> 配置项的 <code>bottom</code> 引入文件即可。</strong><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="comment"># - &lt;link rel=&quot;stylesheet&quot; href=&quot;/xxx.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;/js/runtime.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="在页脚处添加自定义标签"><a href="#在页脚处添加自定义标签" class="headerlink" title="在页脚处添加自定义标签"></a>在页脚处添加自定义标签</h3><ol><li><strong>用编辑器打开 <code>/themes/Butterfly/layout/includes/footer.pug</code> 文件，在最后添加如下代码：</strong><br><strong>需要注意代码放的位置</strong>(<font color='red'>两条- - - - -线之间的内容</font>)<strong>还有格式和对齐。</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">if theme.footer.custom_text</span><br><span class="line">  .footer_custom_text!&#x3D;&#96;$&#123;theme.footer.custom_text&#125;&#96;</span><br><span class="line">-------------------------------------------------------</span><br><span class="line">  .github-badge</span><br><span class="line">    a(style&#x3D;&#39;color:#fff&#39;, rel&#x3D;&#39;external nofollow noopener noreferrer&#39;, href&#x3D;&#39;https:&#x2F;&#x2F;hexo.io&#x2F;&#39;, target&#x3D;&#39;_blank&#39;, title&#x3D;&#39;由 Hexo 强力驱动&#39;, data-pjax-state&#x3D;&#39;&#39;)</span><br><span class="line">      span.badge-subject Powered</span><br><span class="line">      span.badge-value.bg-red Hexo 5.2.0</span><br><span class="line">  .github-badge</span><br><span class="line">    a(style&#x3D;&#39;color:#fff&#39;, rel&#x3D;&#39;external nofollow noopener noreferrer&#39;, href&#x3D;&#39;https:&#x2F;&#x2F;github.com&#x2F;&#39;, target&#x3D;&#39;_blank&#39;, title&#x3D;&#39;静态网页托管于 GitHub Pages 和 Gitee Pages&#39;, data-pjax-state&#x3D;&#39;&#39;)</span><br><span class="line">      span.badge-subject Hosted</span><br><span class="line">      span.badge-value.bg-blue GitHub &amp; Gitee</span><br><span class="line">  .github-badge</span><br><span class="line">    a(style&#x3D;&#39;color:#fff&#39;, rel&#x3D;&#39;external nofollow noopener noreferrer&#39;, href&#x3D;&#39;http:&#x2F;&#x2F;creativecommons.org&#x2F;licenses&#x2F;by-nc-sa&#x2F;4.0&#x2F;&#39;, target&#x3D;&#39;_blank&#39;, title&#x3D;&#39;本站点采用知识共享署名-非商业性使用-相同方式共享 4.0 国际许可协议进行许可&#39;, data-pjax-state&#x3D;&#39;&#39;)</span><br><span class="line">      span.badge-subject</span><br><span class="line">        i.fa.fa-copyright</span><br><span class="line">      span.badge-value.bg-brightgreen BY-NC-SA 4.0</span><br><span class="line">  .github-badge</span><br><span class="line">    a(style&#x3D;&#39;color:#fff&#39;, rel&#x3D;&#39;external nofollow noopener noreferrer&#39;, href&#x3D;&#39;https:&#x2F;&#x2F;github.com&#x2F;jerryc127&#x2F;hexo-theme-butterfly&#39;, target&#x3D;&#39;_blank&#39;, title&#x3D;&#39;站点使用Butterfly主题dev分支最新版&#39;, data-pjax-state&#x3D;&#39;&#39;)</span><br><span class="line">      span.badge-subject Theme</span><br><span class="line">      span.badge-value.bg-lightgrey Butterfly 3.3.0-b2</span><br><span class="line">------------------------------------------------------------</span><br><span class="line">if theme.footer.ICP.enable</span><br><span class="line">  .icp</span><br><span class="line">    a(href&#x3D;theme.footer.ICP.url)</span><br><span class="line">      if theme.footer.ICP.icon</span><br><span class="line">        img.icp-icon(src&#x3D;url_for(theme.footer.ICP.icon))</span><br><span class="line">      span&#x3D;theme.footer.ICP.text</span><br></pre></td></tr></table></figure></li><li><strong>在 <code>\themes\butterfly\source\css\</code> 目录下新建 <code>github-badge.css</code> 文件，内容如下：</strong><figure class="highlight css"><table><tr><td class="code"><pre><span class="line"><span class="comment">/*底部信息*/</span></span><br><span class="line"><span class="selector-class">.github-badge</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:inline-block;</span><br><span class="line">    <span class="attribute">border-radius</span>:<span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">text-shadow</span>:none;</span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">13px</span>;</span><br><span class="line">    <span class="attribute">color</span>:<span class="number">#fff</span>;</span><br><span class="line">    <span class="attribute">line-height</span>:<span class="number">15px</span>;</span><br><span class="line">    <span class="attribute">margin-bottom</span>:<span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-tag">a</span>&#123;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> <span class="number">1px</span> <span class="number">5px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.badge-subject</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:inline-block;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="number">#4D4D4D</span>;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">4px</span> <span class="number">4px</span> <span class="number">4px</span> <span class="number">6px</span>;</span><br><span class="line">    <span class="attribute">border-top-left-radius</span>:<span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">border-bottom-left-radius</span>:<span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.badge-value</span> &#123;</span><br><span class="line">    <span class="attribute">display</span>:inline-block;</span><br><span class="line">    <span class="attribute">padding</span>:<span class="number">4px</span> <span class="number">6px</span> <span class="number">4px</span> <span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">border-top-right-radius</span>:<span class="number">4px</span>;</span><br><span class="line">    <span class="attribute">border-bottom-right-radius</span>:<span class="number">4px</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-brightgreen</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="number">#4DC820</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-orange</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="number">#FFA500</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-yellow</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="number">#D8B024</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-blueviolet</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="number">#8833D7</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-pink</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="number">#F26BAE</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-red</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="number">#e05d44</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-blue</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="number">#007EC6</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-lightgrey</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="number">#9F9F9F</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-grey</span>, <span class="selector-class">.github-badge</span> <span class="selector-class">.bg-gray</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="number">#555</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-lightgrey</span>, <span class="selector-class">.github-badge</span> <span class="selector-class">.bg-lightgray</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>:<span class="number">#9f9f9f</span> <span class="meta">!important</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.github-badge</span> <span class="selector-class">.bg-blueviolet</span> &#123;</span><br><span class="line">    <span class="attribute">background-color</span>: <span class="number">#8833d7</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><strong>打开主题配置文件<code>_config.butterfly.yml</code>，找到 <code>inject</code> 配置项的 <code>head</code> 引入文件即可。</strong><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;css/github-badge.css.css&quot;&gt;</span></span><br></pre></td></tr></table></figure></li></ol><p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p>]]></content>
    
    
    <summary type="html">修改页脚处的&#39;By&#39;为跳动的爱心&lt;br&gt;在页脚处添加博客运行天数&lt;br&gt;在页脚处添加自定义标签</summary>
    
    
    
    <category term="博客の美化" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/"/>
    
    <category term="Butterfly🦋" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/Butterfly%F0%9F%A6%8B/"/>
    
    
    <category term="Hexo" scheme="https://blog.molipre.com/tags/Hexo/"/>
    
    <category term="Butterfly" scheme="https://blog.molipre.com/tags/Butterfly/"/>
    
    <category term="主题魔改" scheme="https://blog.molipre.com/tags/%E4%B8%BB%E9%A2%98%E9%AD%94%E6%94%B9/"/>
    
    <category term="footer" scheme="https://blog.molipre.com/tags/footer/"/>
    
  </entry>
  
  <entry>
    <title>20201112</title>
    <link href="https://blog.molipre.com/posts/33cbbda3.html"/>
    <id>https://blog.molipre.com/posts/33cbbda3.html</id>
    <published>2020-11-11T16:00:00.000Z</published>
    <updated>2020-11-11T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>2020年11月12日 星期四 天气 晴</strong></p><p>今天突发奇想，打算开始在博客写一下日记，不过应该不会天天写，想写的时候就记录一下，勉强叫做日记吧。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;2020年11月12日 星期四 天气 晴&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;今天突发奇想，打算开始在博客写一下日记，不过应该不会天天写，想写的时候就记录一下，勉强叫做日记吧。&lt;/p&gt;
</summary>
      
    
    
    
    <category term="学习&amp;随想" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/"/>
    
    <category term="随想💡" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/%E9%9A%8F%E6%83%B3%F0%9F%92%A1/"/>
    
    <category term="日记" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/%E9%9A%8F%E6%83%B3%F0%9F%92%A1/%E6%97%A5%E8%AE%B0/"/>
    
    
    <category term="日记" scheme="https://blog.molipre.com/tags/%E6%97%A5%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>苹果Magic TrackPad 2的使用体验</title>
    <link href="https://blog.molipre.com/posts/daa81896.html"/>
    <id>https://blog.molipre.com/posts/daa81896.html</id>
    <published>2020-11-11T07:44:17.000Z</published>
    <updated>2020-11-13T09:58:30.578Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ul><li><strong>Magic TrackPad 2是一款2015年10月发布的硬件，时隔5年，0202年了为何我还要买一款5年前的产品？</strong><br><strong>第一</strong>，当然是这个系列产品只有两代，第一代是2010年7月发布的产品，早就停产了，第二代相比第一代更新了很多东西(文章会说)，目前全新在售的只有第二代，那就只能买这个了。<br><strong>第二</strong>，体验过MacBook Pro的触控板和罗技的T650，果然是自家的产品适配是最好的，便萌生了买一个Magic TrackPad 2的念头，最终在618京东购入银白色款(喜欢黑色但是黑色贵几十块)。<br><strong>第三</strong>，装完黑苹果电脑后，我就买了一套苹果的键盘和鼠标用，但是用了一段时间，苹果的鼠标简直反人类，用久了手极其不舒服，后面换成罗技的MX master鼠标就舒服多了，不过也让我更想买一个妙控板试试了。</li></ul><h1 id="开箱"><a href="#开箱" class="headerlink" title="开箱"></a>开箱</h1><h2 id="外观"><a href="#外观" class="headerlink" title="外观"></a>外观</h2><ol><li><p><strong>虽然900块钱的价格稍微贵了点，但是Magic TrackPad 2的外观是符合我的审美的，有苹果产品一贯的精致感，我选的是银白色款，虽然我更喜欢黑色，但如果你问我为什么不选黑色，毕竟贵几十块钱，同样的产品能省则省嘛，银白色也是很好看的，可以看看下面的图片。</strong><br><strong>抽拉式的盒子，把密封塑料撕开，向外拉一下，就能看到妙控板，一整块白色的磨砂玻璃板。</strong></p><p><img src="https://i.loli.net/2020/11/11/MlWYKXqIZ7QU2Nf.jpg" alt="mg.jpg"></p><!-- ![mg1.jpg](https://i.loli.net/2020/11/11/YvxMmrRNb1aCpHL.jpg) --></li><li><p><strong>提起Magic TrackPad 2然后拿出来，就能看到附带的充电线，和iPhone一样的lightning接口，还有一份说明书和保修卡之类的。</strong></p><p><img src="https://i.loli.net/2020/11/11/tkR6IxiTlbH1OYF.jpg" alt="mg2.jpg"></p></li><li><p><strong>就正面的外观，只看到一整块白色的磨砂玻璃面板，没有任何logo，很简洁，整个磨砂玻璃面板摸起来的手感也很不错，触感丝滑，整体尺寸为16X11.49CM，相比较一代妙控板，TrackPad 2提供了更宽的表面，面积相比较一代大了29%。其内置了一个可充电的电池，通过内置的电池驱动，电池可通过Lightning接口重复充电。</strong></p><p><img src="https://i.loli.net/2020/11/11/uXlxIwfy6evKb37.jpg" alt="mg3.jpg"></p></li><li><p><strong>在Magic TrackPad 2的顶部一侧，从左到右分别为电源开关，lightning接口，以及还有蓝牙天线。值得一提的是蓝牙天线处被无线电透明材料条包裹着，可以让触控板更好的发射和接收蓝牙信号。由于没有LED的电源指示灯，在电源开关处用浅绿色标志做区分。接上lightning充电线，可为TrackPad 2充电续航，充满电需要2个小时，续航可达到一个月左右，并且可以一边充电一边使用。</strong></p><p><img src="https://i.loli.net/2020/11/11/ko1eY5FZn2HQVum.jpg" alt="mg4.jpg"></p></li><li><p><strong>Magic Track 2 背面由塑料之类的材料制作，底部中央处有一苹果Logo，四周各有一枚圆形脚垫，结构跟老款不同，这四个垫脚是固定在底面塑料板上的，不会动,可以让触控板放在桌子上时，更加稳定，而老款是两个垫脚，且垫脚后面连着微动开关。按下触控板的时候，整块板向下运动。</strong></p><p><img src="https://i.loli.net/2020/11/11/4FOkDyZWSrPQKIf.jpg" alt="mg5.jpg"></p></li></ol><h2 id="使用体验"><a href="#使用体验" class="headerlink" title="使用体验"></a>使用体验</h2><details ><summary> <p>详细版瞎BB</p> </summary>              <div class='content'>              <ol><li>与电脑连接很方便，打开Magic TrackPad 2顶部的电源开关，然后拿一根lightning线分别接到电脑和Magic TrackPad 2，等一会就成功配对，然后拔线即可，当然传统的蓝牙配对连接方式也是可以的。</li><li>手势使用，在触控板选项中有几个默认的手势，双指缩放、双指旋转、双指左右滚动、三指左右扫等一些简单的手势。关于手势这方面，如果只是简单使用默认的手势，那只能说开发了一小部分Magic TrackPad 2的潜力，只有配合BetterTouchToo手势设置软件才是完整的(下面会介绍)。</li><li>在使用Magic TrackPad 2近一个半月的时间后，不得不感叹苹果出色的工业设计，一贯优良的做工，以及硕大的触控面积带来了较为舒适的触控体验，长达一个月的续航时间，在我的使用感受中，这款触控板确确实实起到了替代苹果鼠标的作用，尤其是苹果鼠标反人类的设计，使用时间过长，手指异常酸痛时，用Magic TrackPad 2进行触控操作，那种感受真实前所未有的舒适。如果排除其高昂的售价，Magic TrackPad 2还是一款值得买的电脑配件，但是其实相对苹果自身的产品线的各类产品，它好像也不显得特别昂贵了。</li><li>一个900块的产品，对于一直用惯鼠标的朋友或者Windows用户来说，并不是一个必需品，特别是一个对鼠标有重度依赖使用习惯的人那更加没什么必要，因为他的拖拽操作还是和鼠标有很大的差距的(目前我使用过程中虽然逐步适应了，但有些操作我还是会使用鼠标完成)，总体来说，如果你是苹果生态的用户，或者是不差钱的朋友，Magic TrackPad 2不失为一个可以买的产品，在Mac上，手势太舒服了，按压触感和反馈会让你觉得是一种全新的交互方式。</li></ol>              </div>            </details><p><big><strong>简单说说</strong></big></p><ol><li>连接简单快速，上手适应基础手势也很快。</li><li>触感舒服，磨砂玻璃触摸体验良好，底部防滑很到位，触控板不会因为滑动而偏移。</li><li>续航长，使用一个半月，平均每天使用时间为三个小时，至今未充电。</li><li>Mac os适配优秀，Windows适配不太行。</li><li>配合BetterTouchToo手势设置软件能够增加1000%使用体验。</li></ol><h2 id="购买推荐"><a href="#购买推荐" class="headerlink" title="购买推荐"></a>购买推荐</h2><ol><li>只有一条，使用macOS的用户都推荐购买，特别是在使用苹果的<strong>妙控鼠标</strong>的用户，换妙控板之后会是全新体验。</li><li>如果是重度Windows用户，就算拥有双系统的，就不要购买了。</li><li>仅仅是为了体验，也不要买，毕竟900块还是挺贵的。</li></ol><h1 id="BetterTouchTool"><a href="#BetterTouchTool" class="headerlink" title="BetterTouchTool"></a>BetterTouchTool</h1><p><strong>BetterTouchTool</strong>（简称 BTT）是一款完全免费的 Mac 辅助应用，可以用来代替默认的系统操作方式（组合键、修饰键、手势等），其目的是方便用户创造出更适合自身习惯的操作行为，是 Mac 上非常强大的触摸板辅助工具。在使用BTT过程中，请牢记一条原则：<font color='red'><strong>必须让 BTT 后台运行</strong></font>。<strong>你能在使用BTT过程中得到：</strong></p><blockquote><ul><li>增加更多的触控板手势（多达几十种）</li><li>自定苹果鼠标快捷功能（手势、轻点、点按等）</li><li>自定普通鼠标快捷功能</li><li>自定触控栏（touchbar）</li><li>自定键盘快捷键</li><li>自定窗口点击功能</li></ul></blockquote><ol><li><p><a href="https://xclient.info/s/bettertouchtool.html"><strong>点击去下载绿色版BetterTouchTool</strong></a></p></li><li><p><strong>基础设置</strong><br>设置窗口有两个：<strong>配置窗口</strong>（设置手势、快捷键等）；<strong>2、偏好设置</strong>。<br><strong>1、设置语言</strong></p><p><img src="https://i.loli.net/2020/11/13/4tL13vlnOXp2k7T.png" alt="btt.png"><br><strong>2、关闭窗口吸附</strong><br>开启窗口吸附功能会和系统的某些功能冲突，建议关闭；后续会介绍如何通过手势和快捷键来控制窗口的大小和位置。<strong>其他的设置可以在后续的自定义配置中根据需要自行调整。</strong></p><p><img src="https://i.loli.net/2020/11/13/1SXvOMDfmwLiYnV.png" alt="btt1.png"></p></li><li><p><strong>自定义触控板</strong><br>打开自定义配置窗口，选择触控板：<br><img src="https://i.loli.net/2020/11/13/uNafcAJt3jVmS2M.png" alt="btt2.png"><br><strong>1、</strong><br><strong>2、</strong><br><strong>3、</strong><br><strong>4、</strong></p></li><li><p><strong>自定义键盘快捷键</strong><br>BTT还有个非常好的功能——窗口吸附。<strong>（<font color='red'>之前在偏好设置中关闭窗口吸附功能是因为在拖拽窗口触发吸附的过程中会和系统的某些功能冲突，建议用快捷键来实现</font>）</strong></p><p><img src="https://i.loli.net/2020/11/13/AJkyzH6t7UWlFVf.png" alt="btt5.png"></p></li><li><p><strong>BTT还可以针对Magic Mouse、Touch Bar、普通鼠标、App窗口等等设置对应的操作，但因为我这边是介绍Magic TrackPad 2的文章，所以只讲了触控板的设置，不过经过上面一轮教程，大家应该会自己设置想要的功能，我就不过多介绍了。</strong></p></li><li><p><strong>关于Touch Bar的各种预设，可以<a href="https://community.folivora.ai/">点击这里</a>去下载</strong></p></li></ol><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><ul><li><strong>谢谢大家观看本文关于Magic TrackPad 2的体验和使用，文章就到这里啦，再见👋。</strong></li></ul><p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p>]]></content>
    
    
    <summary type="html">半年前组装了台黑苹果主机，一直使用的是罗技的MX master，不过体验过MacBook Pro的触控板，便想着买一个Magic TrackPad 2试一下，看看体验如何。</summary>
    
    
    
    <category term="产品体验" scheme="https://blog.molipre.com/categories/%E4%BA%A7%E5%93%81%E4%BD%93%E9%AA%8C/"/>
    
    <category term="Apple相关🍎" scheme="https://blog.molipre.com/categories/%E4%BA%A7%E5%93%81%E4%BD%93%E9%AA%8C/Apple%E7%9B%B8%E5%85%B3%F0%9F%8D%8E/"/>
    
    
    <category term="产品体验" scheme="https://blog.molipre.com/tags/%E4%BA%A7%E5%93%81%E4%BD%93%E9%AA%8C/"/>
    
    <category term="妙控板" scheme="https://blog.molipre.com/tags/%E5%A6%99%E6%8E%A7%E6%9D%BF/"/>
    
  </entry>
  
  <entry>
    <title>学习使用Markdown编辑博客内容</title>
    <link href="https://blog.molipre.com/posts/44cc8d35.html"/>
    <id>https://blog.molipre.com/posts/44cc8d35.html</id>
    <published>2020-11-10T16:00:00.000Z</published>
    <updated>2020-11-10T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ol><li><strong>Markdown是什么？</strong>Markdown 语言在 2004 由约翰·格鲁伯（John Gruber）创建，是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档，可以导出 HTML 、Word、图像、PDF、Epub 等多种格式的文档。</li><li><strong>Markdown的应用：</strong>能被使用来撰写电子书或撰写文档，或是用于论坛上发表消息。</li><li><strong>Markdown编辑器：</strong>Markdown文件能被我们熟知的代码编辑器编辑，例如我在使用的 <code>Atom</code> 和 <code>Sublime Text</code> 等，比较出名的专门用于Markdown文件编辑的也有 <code>Typora</code> 等。</li></ol><h1 id="Markdown的使用"><a href="#Markdown的使用" class="headerlink" title="Markdown的使用"></a>Markdown的使用</h1><h2 id="Markdown-标题"><a href="#Markdown-标题" class="headerlink" title="Markdown 标题"></a>Markdown 标题</h2><ol><li><p><strong>使用 <code>=</code> 和 <code>-</code> 标记一级和二级标题</strong><br><strong>格式如下：</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">我展示的是一级标题</span><br><span class="line">&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;</span><br><span class="line"></span><br><span class="line">我展示的是二级标题</span><br><span class="line">-----------------</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong></p><blockquote><p>展示就算了，会打乱文章的目录</p></blockquote></li><li><p><strong>使用 <code>#</code> 号标记</strong><br><strong>使用 <code>#</code> 号可表示 1-6 级标题，一级标题对应一个 <code>#</code> 号，二级标题对应两个 <code>#</code> 号，以此类推。</strong><br><strong>格式如下：</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line"># 一级标题</span><br><span class="line">## 二级标题</span><br><span class="line">### 三级标题</span><br><span class="line">#### 四级标题</span><br><span class="line">##### 五级标题</span><br><span class="line">###### 六级标题</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong></p><blockquote><p>展示就算了，会打乱文章的目录</p></blockquote></li></ol><h2 id="Markdown-段落"><a href="#Markdown-段落" class="headerlink" title="Markdown 段落"></a>Markdown 段落</h2><ul><li><strong>Markdown 段落没有特殊的格式，直接编写文字就好，段落的换行是使用两个以上空格加上回车。</strong></li><li><strong>也可以在段落后面使用一个空行来表示重新开始一个段落。</strong><br><strong>格式如下：</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">Markdown段落  #代表前面有两个空格</span><br><span class="line">Markdown 段落</span><br><span class="line"></span><br><span class="line">Markdown 段落</span><br></pre></td></tr></table></figure></li></ul><h2 id="Markdown-字体"><a href="#Markdown-字体" class="headerlink" title="Markdown 字体"></a>Markdown 字体</h2><ul><li><strong>Markdown 可以使用以下几种字体：</strong><br><strong>格式如下：</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">*斜体文本*</span><br><span class="line">_斜体文本_</span><br><span class="line">**粗体文本**</span><br><span class="line">__粗体文本__</span><br><span class="line">***粗斜体文本***</span><br><span class="line">___粗斜体文本___</span><br></pre></td></tr></table></figure><strong>效果如下：</strong><br><em>斜体文本</em><br><em>斜体文本</em><br><strong>粗体文本</strong><br><strong>粗体文本</strong><br><strong><em>粗斜体文本</em></strong><br><strong><em>粗斜体文本</em></strong></li></ul><h2 id="Markdown-分隔线"><a href="#Markdown-分隔线" class="headerlink" title="Markdown 分隔线"></a>Markdown 分隔线</h2><ul><li><p><strong>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</strong><br><strong>格式如下：</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">***</span><br><span class="line"></span><br><span class="line">* * *</span><br><span class="line"></span><br><span class="line">*****</span><br><span class="line"></span><br><span class="line">- - -</span><br><span class="line"></span><br><span class="line">----------</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong></p><hr><hr><hr><hr><hr></li></ul><h2 id="Markdown-删除线"><a href="#Markdown-删除线" class="headerlink" title="Markdown 删除线"></a>Markdown 删除线</h2><ul><li><strong>如果段落上的文字要添加删除线，只需要在文字的两端加上两个波浪线 <code>~~</code> 即可，实例如下：</strong><br><strong>格式如下：</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">~~Markdown 删除线~~</span><br></pre></td></tr></table></figure><strong>效果如下：</strong><br><del>Markdown 删除线</del></li></ul><h2 id="Markdown-下划线"><a href="#Markdown-下划线" class="headerlink" title="Markdown 下划线"></a>Markdown 下划线</h2><ul><li><strong>下划线可以通过 HTML 的 <code>&lt;u&gt;</code> 标签来实现：</strong><br><strong>格式如下：</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;u&gt;Markdown 下划线&lt;&#x2F;u&gt;</span><br></pre></td></tr></table></figure><strong>效果如下：</strong><br><u>Markdown 下划线</u></li></ul><h2 id="Markdown-列表"><a href="#Markdown-列表" class="headerlink" title="Markdown 列表"></a>Markdown 列表</h2><ul><li><strong>Markdown 支持有序列表和无序列表。</strong></li></ul><ol><li><p><strong>无序列表使用星号(<code>*</code>)、加号(<code>+</code>)或是减号(<code>-</code>)作为列表标记，这些标记后面要添加一个空格，然后再填写内容：</strong><br><strong>格式如下：</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* 第一项</span><br><span class="line">* 第二项</span><br><span class="line">* 第三项</span><br><span class="line"></span><br><span class="line">+ 第一项</span><br><span class="line">+ 第二项</span><br><span class="line">+ 第三项</span><br><span class="line"></span><br><span class="line">- 第一项</span><br><span class="line">- 第二项</span><br><span class="line">- 第三项</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong></p><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></li><li><p><strong>有序列表使用数字并加上 <code>.</code> 号来表示，如：</strong><br><strong>格式如下：</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 第一项</span><br><span class="line">2. 第二项</span><br><span class="line">3. 第三项</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong></p><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol></li><li><p><strong>列表嵌套</strong></p><ul><li><strong>列表嵌套只需在子列表中的选项前面添加四个空格即可：</strong></li></ul><p><strong>格式如下：</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">1. 第一项：</span><br><span class="line">    - 第一项嵌套的第一个元素</span><br><span class="line">    - 第一项嵌套的第二个元素</span><br><span class="line">2. 第二项：</span><br><span class="line">    - 第二项嵌套的第一个元素</span><br><span class="line">    - 第二项嵌套的第二个元素</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong></p><ol><li>第一项：<ul><li>第一项嵌套的第一个元素</li><li>第一项嵌套的第二个元素</li></ul></li><li>第二项：<ul><li>第二项嵌套的第一个元素</li><li>第二项嵌套的第二个元素</li></ul></li></ol></li></ol><h2 id="Markdown-区块"><a href="#Markdown-区块" class="headerlink" title="Markdown 区块"></a>Markdown 区块</h2><ol><li><p><strong>Markdown 区块引用是在段落开头使用 <code>&gt;</code> 符号 ，然后后面紧跟一个空格符号：</strong><br><strong>格式如下：</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; Markdown 区块</span><br><span class="line">&gt; Markdown 区块</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong></p><blockquote><p>Markdown 区块<br>Markdown 区块</p></blockquote></li><li><p><strong>区块嵌套</strong><br><strong>一个 <code>&gt;</code> 符号是最外层，两个 <code>&gt;</code> 符号是第一层嵌套，以此类推：</strong><br><strong>格式如下：</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; Markdown 区块</span><br><span class="line">&gt; &gt; Markdown 区块</span><br><span class="line">&gt; &gt; &gt; Markdown 区块</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong></p><blockquote><p>Markdown 区块嵌套 最外层</p><blockquote><p>Markdown 区块嵌套 第一层</p><blockquote><p>Markdown 区块嵌套 第二层</p></blockquote></blockquote></blockquote></li><li><p><strong>区块中使用列表</strong><br><strong>格式如下：</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&gt; 区块中使用列表</span><br><span class="line">&gt; 1. 第一项</span><br><span class="line">&gt; 2. 第二项</span><br><span class="line">&gt; + 第一项</span><br><span class="line">&gt; + 第二项</span><br><span class="line">&gt; + 第三项</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong></p><blockquote><p>区块中使用列表</p><ol><li>第一项</li><li>第二项</li></ol><ul><li>第一项</li><li>第二项</li><li>第三项</li></ul></blockquote></li><li><p><strong>列表中使用区块</strong><br><strong>如果要在列表项目内放进区块，那么就需要在 <code>&gt;</code> 前添加四个空格的缩进。</strong><br><strong>格式如下：</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">* 第一项</span><br><span class="line"> &gt; 列表中使用区块</span><br><span class="line"> &gt; 列表中使用区块</span><br><span class="line">* 第二项</span><br><span class="line"> &gt; 列表中使用区块</span><br><span class="line"> &gt; 列表中使用区块</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong></p><ul><li>第一项<blockquote><p>列表中使用区块<br>列表中使用区块</p></blockquote></li><li>第二项<blockquote><p>列表中使用区块<br>列表中使用区块</p></blockquote></li></ul></li></ol><h2 id="Markdown-代码"><a href="#Markdown-代码" class="headerlink" title="Markdown 代码"></a>Markdown 代码</h2><ol><li><strong>如果是段落上的一个函数或片段的代码可以用反引号 <code>`</code> 把它包起来。</strong><br><strong>格式如下：</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#96;Markdown 代码&#96;</span><br></pre></td></tr></table></figure><strong>效果如下：</strong><br><code>Markdown 代码</code></li><li><strong>用 <code>```</code> 包裹一段代码，并指定一种语言(也可以不指定)</strong><br><strong>格式如下：</strong><br><img src="https://i.loli.net/2020/11/10/TXAE5vbRujsf1OJ.png" alt="daima.png"><br><strong>效果如下：</strong><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span> (getDate &lt; <span class="number">10</span>)&#123;</span><br><span class="line">   getDate = <span class="string">&quot;0&quot;</span> + <span class="built_in">String</span>(getDate);&#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">   getDate = <span class="built_in">String</span>(getDate);&#125;</span><br></pre></td></tr></table></figure></li></ol><h2 id="Markdown-链接"><a href="#Markdown-链接" class="headerlink" title="Markdown 链接"></a>Markdown 链接</h2><ul><li><strong>使用方法</strong><br><strong>格式如下：</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">[链接名称](链接地址)</span><br><span class="line">或者</span><br><span class="line">&lt;链接地址&gt;</span><br></pre></td></tr></table></figure><strong>效果如下：</strong><br><a href="https://blog.molipre.com/">一川·MOLIPRE·BLOG</a><br><a href="https://blog.molipre.com/">https://blog.molipre.com/</a></li></ul><h2 id="Markdown-图片"><a href="#Markdown-图片" class="headerlink" title="Markdown 图片"></a>Markdown 图片</h2><ol><li><p><strong>正常使用</strong><br><strong>格式如下：</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">![alt 属性文本](图片地址)</span><br><span class="line">#![ceshidjewk.png](https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;11&#x2F;10&#x2F;PHzYcit7Nj4Gvxo.png)</span><br><span class="line">![alt 属性文本](图片地址 &quot;可选标题&quot;)</span><br><span class="line">#![ceshidjewk.png](https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;11&#x2F;10&#x2F;PHzYcit7Nj4Gvxo.png &quot;ceshi&quot;)</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong><br><img src="https://i.loli.net/2020/11/10/PHzYcit7Nj4Gvxo.png" alt="ceshidjewk.png"></p><p><img src="https://i.loli.net/2020/11/10/PHzYcit7Nj4Gvxo.png" alt="ceshidjewk.png" title="ceshi"></p></li><li><p><strong>赋值使用</strong><br><strong>格式如下：</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">这个链接用 1 作为网址变量 [ceshi][1].</span><br><span class="line">然后在文档的结尾为变量赋值（网址）</span><br><span class="line"></span><br><span class="line">[1]: https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;11&#x2F;10&#x2F;PHzYcit7Nj4Gvxo.png</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong><br>这个链接用 1 作为网址变量 <a href="https://i.loli.net/2020/11/10/PHzYcit7Nj4Gvxo.png">ceshi</a>.<br>然后在文档的结尾为变量赋值（网址）</p></li></ol><ol start="3"><li><strong>使用 <code>&lt;img&gt;</code> 标签</strong><br><strong>格式如下：</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;img src&#x3D;&quot;https:&#x2F;&#x2F;i.loli.net&#x2F;2020&#x2F;11&#x2F;10&#x2F;PHzYcit7Nj4Gvxo.png&quot; width&#x3D;&quot;50%&quot;&gt;</span><br></pre></td></tr></table></figure><strong>效果如下：</strong><img src="https://i.loli.net/2020/11/10/PHzYcit7Nj4Gvxo.png" width="50%"></li></ol><h2 id="Markdown-表格"><a href="#Markdown-表格" class="headerlink" title="Markdown 表格"></a>Markdown 表格</h2><ul><li><p><strong>Markdown制作表格使用 <code>|</code> 来分隔不同的单元格，使用 <code>-</code> 来分隔表头和其他行</strong><br><strong>格式如下：</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">|  表头   | 表头  |</span><br><span class="line">|  ----  | ----  |</span><br><span class="line">| 单元格  | 单元格 |</span><br><span class="line">| 单元格  | 单元格 |</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong></p><table><thead><tr><th>表头</th><th>表头</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td></tr></tbody></table></li><li><p><strong>对齐方式</strong></p><blockquote><p><code>-:</code> 设置内容和标题栏居右对齐。<br><code>:-</code> 设置内容和标题栏居左对齐。<br><code>:-:</code> 设置内容和标题栏居中对齐。</p></blockquote><p><strong>格式如下：</strong></p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">| 左对齐 | 右对齐 | 居中对齐 |</span><br><span class="line">| :-----| ----: | :----: |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br><span class="line">| 单元格 | 单元格 | 单元格 |</span><br></pre></td></tr></table></figure><p><strong>效果如下：</strong></p><table><thead><tr><th align="left">左对齐</th><th align="right">右对齐</th><th align="center">居中对齐</th></tr></thead><tbody><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr><tr><td align="left">单元格</td><td align="right">单元格</td><td align="center">单元格</td></tr></tbody></table></li></ul><h2 id="支持的HTML元素"><a href="#支持的HTML元素" class="headerlink" title="支持的HTML元素"></a>支持的HTML元素</h2><ol><li><strong>不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。</strong><br><strong>目前支持的 HTML 元素有：<code>&lt;kbd&gt;</code> <code>&lt;b&gt;</code> <code>&lt;i&gt;</code> <code>&lt;em&gt;</code> <code>&lt;sup&gt;</code> <code>&lt;sub&gt;</code> <code>&lt;br&gt;</code> 等 ，如：</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&lt;kbd&gt;Ctrl&lt;&#x2F;kbd&gt;+&lt;kbd&gt;c&lt;&#x2F;kbd&gt; 复制  &lt;kbd&gt;Ctrl&lt;&#x2F;kbd&gt;+&lt;kbd&gt;v&lt;&#x2F;kbd&gt; 粘贴</span><br></pre></td></tr></table></figure><strong>效果如下：</strong><br><kbd>Ctrl</kbd>+<kbd>c</kbd> 复制  <kbd>Ctrl</kbd>+<kbd>v</kbd> 粘贴</li><li><strong>转义</strong><br><strong>Markdown使用了很多特殊符号来表示特定的意义，如果需要显示特定的符号则需要使用转义字符，Markdown使用反斜杠转义特殊字符。</strong><br><strong>格式如下：</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">**文本加粗**</span><br><span class="line">\*\* 文本加粗 \*\*</span><br></pre></td></tr></table></figure><strong>效果如下：</strong><br><strong>文本加粗</strong><br>** 文本加粗 **</li><li><strong>Markdown 支持以下这些符号前面加上反斜杠来帮助插入普通的符号：</strong><blockquote><p><code>\</code>   反斜线， <code>*</code>   星号， <code>_</code>   下划线， <code>&#123;&#125;</code>  花括号， <code>[]</code>  方括号， <code>()</code>  小括号<br>  <code>#</code>   井字号， <code>+</code>   加号， <code>-</code>   减号， <code>.</code>   英文句点， <code>!</code>   感叹号， <code>`</code> 反引号</p></blockquote></li></ol><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><ul><li><strong>这些内容在网络上随便一搜索就能找到，仅仅是记录在自己博客供自己备份查看，如有需要也可以查看，如觉得和网络上一样而想BB一下就不必了，麻烦<kbd>Ctrl</kbd>+<kbd>F4</kbd>。</strong></li></ul><p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p>]]></content>
    
    
    <summary type="html">Markdown 是一种轻量级标记语言，它允许人们使用易读易写的纯文本格式编写文档。</summary>
    
    
    
    <category term="学习&amp;随想" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/"/>
    
    <category term="学习📖" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/%E5%AD%A6%E4%B9%A0%F0%9F%93%96/"/>
    
    <category term="Markdown" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/%E5%AD%A6%E4%B9%A0%F0%9F%93%96/Markdown/"/>
    
    
    <category term="Markdown" scheme="https://blog.molipre.com/tags/Markdown/"/>
    
    <category term="文档编辑" scheme="https://blog.molipre.com/tags/%E6%96%87%E6%A1%A3%E7%BC%96%E8%BE%91/"/>
    
  </entry>
  
  <entry>
    <title>斐讯N1刷OpenWrt系统做旁路由</title>
    <link href="https://blog.molipre.com/posts/4a17b156.html"/>
    <id>https://blog.molipre.com/posts/4a17b156.html</id>
    <published>2020-11-08T16:00:00.000Z</published>
    <updated>2020-11-08T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><h2 id="为什么要用N1盒子当做旁路由"><a href="#为什么要用N1盒子当做旁路由" class="headerlink" title="为什么要用N1盒子当做旁路由"></a>为什么要用N1盒子当做旁路由</h2><ol><li>按照斐讯N1的价格来买相同的路由器<p style="font-size:0.7rem;font-weight:600;display:inline">(50元-200元，价格标准按照PDD平台，主要是因为斐讯N1盒子涨价和降价的原因，购入价格可能大为不同)</p>，目前市面上200元以内能买到的最新路由器基本都是性能挺不错的，基本能满足普通用户500M以下宽带的使用，甚至200元已经能买到WiFi6的路由器了。但是总会有用户对网络环境有其他的需求，例如我本人可能会需要去广告，自动签到等一些服务。</li><li><strong>是否能使用普通路由器？</strong>关于这个问题，其实一些硬路由(普通路由器)通过刷固件是能够实现上诉一些功能，但是因为要分出一定的性能去实现这些服务，可能会影响网络质量，因此额外增加一台路由器当做旁路由是能够很好解决性能问题，不影响网络质量，而且也能解决特许需求，旁路由出现问题也能快速解决且不影响整体的网络。</li><li><strong>为何不用x86软路由？</strong>对标价格、体积、功耗、性能，以我80元一台买到手的价格为例，巴掌大小的体积，5w不到的功耗，是为上上之选，同价位的软路由基本是两三个斐讯N1大小，同大小的软路由基本价格翻几倍，加上我需求不需要过高的性能，斐讯N1可以说是我最好的选择<p style="font-size:0.7rem;font-weight:600;display:inline">(当然前提是你现在买到的价格是几十块钱，不过我写下这篇文章的时候斐讯N1的价格基本都要150+元了)</p>。</li></ol><h2 id="斐讯N1盒子是什么"><a href="#斐讯N1盒子是什么" class="headerlink" title="斐讯N1盒子是什么"></a>斐讯N1盒子是什么</h2><ol><li><strong>斐讯N1盒子是2018年斐讯公司推出的一款天天链终端，原本是用于挖矿使用，附带NAS的功能，后来因为某种原因斐讯公司倒闭，斐讯N1盒子的服务器也随之关闭，挖矿(NAS)功能也就无法使用了，但是斐讯N1的配置非常不错，加之斐讯公司倒闭初期，许多斐讯N1盒子出售的价格很便宜，许多大佬通过开发挖掘了斐讯N1的玩法，并且不断维护更新，最终斐讯N1盒子变成了现在大家熟悉的电视盒子、软路由、小型服务器、影音播放器等。</strong></li><li><strong>斐讯N1盒子配置：</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">分辨率 - 支持4K输出</span><br><span class="line">SoC - Allogic S905D 64bit 4Core Cortex-A53 1.5G Hz</span><br><span class="line">GPU - Mali-450</span><br><span class="line">RAM - 2GB</span><br><span class="line">ROM - 8GB eMMC</span><br><span class="line">WIFI - 2.4G&#x2F;5G</span><br><span class="line">蓝牙 - BT4.1</span><br><span class="line">电源 - 5V&#x2F;2A x1</span><br><span class="line">网口 - 千兆网口 x1</span><br><span class="line">HDMI - x1</span><br><span class="line">USB - USB2.0 x2</span><br></pre></td></tr></table></figure></li></ol><details ><summary> <p>斐讯N1盒子的玩法</p> </summary>              <div class='content'>              <ol><li><strong>NAS</strong><br>NAS应该是斐讯N1盒子比较多人玩的一种玩法，例如刷如OMV<p style="font-size:0.7rem;font-weight:600;display:inline">(OpenMediaVault)</p>系统，再外接移动硬盘便可用作NAS，不过斐讯N1盒子虽然有两个USB接口，但都是USB2.0，速度上会有所限制。</li><li><strong>服务器</strong><br>服务器就有很多种类型了，只需要刷上一个Linux系统<p style="font-size:0.7rem;font-weight:600;display:inline">(Armbian、Centos等)</p>即可当做服务器使用，基本上正常服务器上可以做的，N1也可以做，不过因为架构是Arm，所以有些软件的安装还是要找对应架构的。</li><li><strong>游戏机</strong><br>游戏机就是很简单的，刷入一个游戏模拟器，再导入游戏包即可，连接上电视，用手柄怀念一下儿时的乐趣还是可以的。</li><li><strong>电视盒子</strong><br>电视盒子应该是斐讯N1最早的玩法了，因为和斐讯T1这个电视盒子差不多的，很快就被开发出来了，也是比较推荐的一种玩法，我其中一个斐讯N1盒子就是用作电视盒子，拓展性和性能比很多正牌电视盒子都好。</li><li><strong>软路由</strong><br>软路由就是今天要讲的一种玩法，N1盒子的性能不错，跑500M的宽带基本没问题，刷个路由器系统，再装一些插件，完美使用，例如我目前正在使用的OP系统<p style="font-size:0.7rem;font-weight:600;display:inline">(OpenWrt)</p>。</li></ol>              </div>            </details><h1 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h1><h2 id="硬件"><a href="#硬件" class="headerlink" title="硬件"></a>硬件</h2><ul><li><strong>一台电脑</strong> (最好是Windows，教程用的是)</li><li><strong>斐讯N1盒子和电源</strong></li><li><strong>HDMI线</strong></li><li><strong>有HDMI接口的显示器</strong> (电视也行)</li><li><strong>USB公对公线</strong> (降级需要用)</li><li><strong>U盘</strong> (3.0/2.0都可以，主要是能被识别到就行)</li><li><strong>网线</strong></li></ul><h2 id="软件"><a href="#软件" class="headerlink" title="软件"></a>软件</h2><ul><li><strong>镜像文件写入工具<a href="https://www.balena.io/etcher/">balenaEtcher</a></strong> (博主习惯用这个，其他的能写入且没问题也行)</li><li><strong>斐讯N1降级工具(<a href="https://share.weiyun.com/5klmuxd">下载</a><span class="hide-inline"><button type="button" class="hide-button button--animated" style="background-color: black;">点击查看密码  </button><span class="hide-content">密码：yaefa9</span></span>)</strong></li><li><strong>OpenWrt固件(<a href="https://yadi.sk/d/y6dXguRCij6LTg?w=1">下载</a>)</strong></li><li><strong>adb驱动</strong> (pc设备管理器中通过Windows自动搜索驱动安装)</li></ul><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><h2 id="降级"><a href="#降级" class="headerlink" title="降级"></a>降级</h2><div class="note red quote flat"><p><strong>降级教程参考webpad大佬的教程，大家也可以移步查看 <a href="https://www.right.com.cn/forum/thread-340279-1-1.html">斐讯T1和N1降级恢复线刷功能</a></strong></p></div><ol><li><p><strong>接线，如图所示：</strong><br><img src="https://i.loli.net/2020/11/06/zpHaXQRSFD597iq.png" alt="接线.png"></p></li><li><p><strong>接线完成后，给盒子通电，等待一段时间，连接斐讯N1的显示器出现以下画面，记住网络信息中的IP地址</strong>(降级需要用到)<strong>，然后使用鼠标点击四次红框圈中固件版本号打开adb，出现红色方框提示便成功打开adb，如下图所示：</strong></p><p><img src="https://i.loli.net/2020/11/06/dm1EYb7QMT8j4Z3.jpg" alt="n11.jpg"></p></li><li><p><strong>解压下载好的 <code>斐讯T1、N1官方系统降级工具.zip</code>，打开 <code>onekey</code> 文件夹，找到 <code>run.bat</code> 并运行，按照操作提示输入即可，具体步骤我就不写也不截图，需要的可以看一下webpad大佬的原帖。</strong></p><p><img src="https://i.loli.net/2020/11/06/oUEnedKG7rcfavt.png" alt="run1.png"></p></li></ol><h2 id="刷入OpenWrt固件"><a href="#刷入OpenWrt固件" class="headerlink" title="刷入OpenWrt固件"></a>刷入OpenWrt固件</h2><div class="note red quote flat"><p><strong>刷入OpenWrt的教程和相关固件参考 <a href="https://www.right.com.cn/forum/thread-3160780-1-1.html">N1盒子 Openwrt 固件,支持写入EMMC！</a></strong></p></div><ol><li><strong>制作镜像U盘</strong><ul><li><strong>使用 <code>balenaEtcher</code></strong> (或者其他工具) <strong>将下载好的OpenWrt镜像写入U盘。</strong><br><img src="https://i.loli.net/2020/11/06/XaC3SAWLQevHub2.png" alt="ba.png"></li></ul></li><li><strong>U盘启动</strong><ul><li><strong>将已经写入系统的U盘插入靠近HDMI接口的USB接口，在刚才的降级工具文件夹按住 <code>Shift</code> 右键打开 <code>PowerShell</code> ，输入以下命令使得斐讯N1盒子进入U盘的系统：</strong><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./adb connect IP</span><br><span class="line"><span class="comment">#此IP为之前需要记住的IP地址</span></span><br><span class="line">./adb shell reboot update</span><br></pre></td></tr></table></figure></li><li><strong>查看斐讯N1盒子连接的显示器，出现四只企鹅则U盘OpenWrt启动正常。</strong></li><li><strong>若出现机器人倒地，请多换几个U盘重复刷入固件步骤进行尝试。</strong></li></ul></li><li><strong>在电脑的浏览器输入 <code>192.168.123.2</code> 即可进入OpenWrt后台管理。</strong></li></ol><div class="note red idea flat"><p><strong>注意以下两步为摆脱U盘，刷写固件到斐讯N1盒子的eMMC的操作，如不需摆脱U盘，可省略下面两步操作</strong></p></div><ol><li><strong>刷入eMMC并启动</strong><ul><li><strong>登陆 <code>OpenWrt</code> 管理后台，依次来到 <code>系统</code> → <code>TTYD终端(网页终端)</code> ，看到 <code>OpenWrt login: </code>,输入用户名 <code>root</code> 敲回车，<code>Password: </code>输入密码 <code>password</code> 敲回车即可登录成功。</strong><div class="hide-toggle" style="border: 1px solid bg"><div class="hide-button toggle-title" style="background-color: bg">  <i class="fas fa-caret-right fa-fw"></i><span>隐藏信息</span></div><div class="hide-content">  <ul>  <p style="font-size:0.8rem;font-weight:600;display: inline">前提是刷了我给的链接中的固件，其他固件请参考固件原帖信息</p><br>  OpenWrt默认后台管理地址：192.168.123.2，默认用户名：root，密码：password<br>  文件浏览器默认用户名及密码：admin<br>  qBittorrent Web用户界面默认用户名：admin，密码：adminadmin    </ul></div></div></li><li><strong>登录成功后会出现 <code>root@N1:~#</code> ，输入以下命令回车并按照提示操作即可：</strong><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">./install.sh</span><br><span class="line"><span class="comment">#执行写入EMMC 脚本命令</span></span><br><span class="line">./update.sh</span><br><span class="line"><span class="comment">#此命令为 “保留配置升级” 命令，但版本跨度过大，不建议使用该命令来升级固件</span></span><br></pre></td></tr></table></figure></li></ul></li><li><strong>重启斐讯N1盒子，然后拔掉U盘，等待斐讯N1盒子启动后，在电脑的浏览器输入 <code>192.168.123.2</code> 即可进入OpenWrt后台管理。</strong></li></ol><h2 id="设置N1-OpenWrt-为旁路由"><a href="#设置N1-OpenWrt-为旁路由" class="headerlink" title="设置N1(OpenWrt)为旁路由"></a>设置N1(OpenWrt)为旁路由</h2><div class="note red idea flat"><p><strong>注意以下步骤均以我自己的网段为主，如你的主路由器网段不是 <code>192.168.123.x</code> ，请修改相应的IP。</strong></p></div><ol><li><strong>主路由设置</strong><ul><li><strong>如果你的主路由是原厂华硕、梅林、Pandavan等固件，请参照下图1、2步骤：</strong><br>(以我的固件版本为原厂3.0.0.4.385_20632的华硕AC1900P为例)<br><img src="https://i.loli.net/2020/11/09/cINEmF17CtjbrRQ.png" alt="lan.png"></li><li><strong>如果你的主路由也是OpenWrt固件，请参照以下步骤以及图片：</strong><br><strong><code>网络</code> → <code>接口</code> → <code>LAN</code> → <code>修改</code> → <code>下拉到最后</code> → <code>DHCP服务器</code> → <code>高级设置</code> → <code>DHCP选项</code></strong><br><strong>添加以下两行：<code>3,192.168.123.2</code> 与 <code>6,192.168.123.2</code></strong><br><img src="https://i.loli.net/2020/11/09/uqbf43yo7tZPHTz.png" alt="lan1.png"><br><img src="https://i.loli.net/2020/11/09/zD2tSGiA4HPIl7Q.png" alt="lan2.png"></li></ul></li><li><strong>旁路由设置</strong><ul><li><strong>登录斐讯N1后台，按以下步骤找到IPv4网关，修改为如图所示，最后确认修改即可</strong><br><strong><code>网络</code> → <code>接口</code> → <code>LAN</code> → <code>修改</code> → <code>IPv4网关</code> → <code>修改为192.168.123.2</code> → <code>保存&amp;应用</code></strong><br><img src="https://i.loli.net/2020/11/09/UIRVnzfp8FyeSZm.png" alt="lan3.png"></li></ul></li></ol><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><ul><li><strong>祝看到这里的小伙伴玩得开心，成功让斐讯N1成为路由器。</strong></li></ul><p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p>]]></content>
    
    
    <summary type="html">斐讯N1盒子刷OpenWrt固件至eMMC当做旁路由使用</summary>
    
    
    
    <category term="硬件相关" scheme="https://blog.molipre.com/categories/%E7%A1%AC%E4%BB%B6%E7%9B%B8%E5%85%B3/"/>
    
    <category term="斐讯N1" scheme="https://blog.molipre.com/categories/%E7%A1%AC%E4%BB%B6%E7%9B%B8%E5%85%B3/%E6%96%90%E8%AE%AFN1/"/>
    
    
    <category term="斐讯N1" scheme="https://blog.molipre.com/tags/%E6%96%90%E8%AE%AFN1/"/>
    
    <category term="旁路由" scheme="https://blog.molipre.com/tags/%E6%97%81%E8%B7%AF%E7%94%B1/"/>
    
    <category term="OpenWrt" scheme="https://blog.molipre.com/tags/OpenWrt/"/>
    
  </entry>
  
  <entry>
    <title>Linux命令合集</title>
    <link href="https://blog.molipre.com/posts/34a679ba.html"/>
    <id>https://blog.molipre.com/posts/34a679ba.html</id>
    <published>2020-11-04T16:00:00.000Z</published>
    <updated>2020-11-04T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note red quote flat"><p><big><strong>更多Linux命令学习请到<a href="https://man.linuxde.net/">Linux命令大全</a>查询。</strong></big></p></div><h1 id="Linux常用命令记录"><a href="#Linux常用命令记录" class="headerlink" title="Linux常用命令记录"></a>Linux常用命令记录</h1><h2 id="文件管理"><a href="#文件管理" class="headerlink" title="文件管理"></a>文件管理</h2><ol><li><strong>grep</strong><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">grep <span class="string">&#x27;组名&#x27;</span> /etc/group</span><br><span class="line"><span class="comment">#获得组号</span></span><br><span class="line">grep <span class="string">&#x27;组号&#x27;</span> /etc/passwd</span><br><span class="line"><span class="comment">#获得组下所有用户</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#用户在/etc/passwd</span></span><br><span class="line"><span class="comment">#组 在/etc/group</span></span><br></pre></td></tr></table></figure></li><li><strong>chgrp</strong><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">chgrp group1 /home/user1</span><br><span class="line"><span class="comment">#修改home下的user1文件夹所属组为group1</span></span><br><span class="line">chgrp group1 /home/user1.log</span><br><span class="line"><span class="comment">#修改home下的user1.log文件所属组为group1</span></span><br><span class="line"><span class="comment">#-c或--changes 效果类似&quot;-v&quot;参数，但仅回报更改的部分</span></span><br><span class="line"><span class="comment">#-f或--quiet或--silent 不显示错误信息。</span></span><br><span class="line"><span class="comment">#-h或--no-dereference 只对符号连接的文件作修改，而不更动其他任何相关文件。</span></span><br><span class="line"><span class="comment">#-R或--recursive 递归处理，将指定目录下的所有文件及子目录一并处理。</span></span><br><span class="line"><span class="comment">#-v或--verbose 显示指令执行过程。</span></span><br><span class="line"><span class="comment">#--help 在线帮助。</span></span><br><span class="line"><span class="comment">#--reference=&lt;参考文件或目录&gt; 把指定文件或目录的所属群组全部设成和参考文件或目录的所属群组相同。</span></span><br><span class="line"><span class="comment">#--version 显示版本信息。</span></span><br></pre></td></tr></table></figure><h2 id="文档编辑"><a href="#文档编辑" class="headerlink" title="文档编辑"></a>文档编辑</h2><h2 id="文件传输"><a href="#文件传输" class="headerlink" title="文件传输"></a>文件传输</h2><h2 id="磁盘管理"><a href="#磁盘管理" class="headerlink" title="磁盘管理"></a>磁盘管理</h2><h2 id="磁盘维护"><a href="#磁盘维护" class="headerlink" title="磁盘维护"></a>磁盘维护</h2><h2 id="网络通讯"><a href="#网络通讯" class="headerlink" title="网络通讯"></a>网络通讯</h2><h2 id="系统管理"><a href="#系统管理" class="headerlink" title="系统管理"></a>系统管理</h2></li><li><strong>usermod</strong><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">usermod -a -G group1 user1</span><br><span class="line"><span class="comment">#添加用户user1到组group1里</span></span><br><span class="line"><span class="comment">#-a 在原来的所属组的基础上增加</span></span><br><span class="line"><span class="comment">#-c&lt;备注&gt; 修改用户帐号的备注文字。</span></span><br><span class="line"><span class="comment">#-d登入目录&gt; 修改用户登入时的目录。</span></span><br><span class="line"><span class="comment">#-e&lt;有效期限&gt; 修改帐号的有效期限。</span></span><br><span class="line"><span class="comment">#-f&lt;缓冲天数&gt; 修改在密码过期后多少天即关闭该帐号。</span></span><br><span class="line"><span class="comment">#-g&lt;群组&gt; 修改用户所属的群组。</span></span><br><span class="line"><span class="comment">#-G&lt;群组&gt; 修改用户所属的附加群组。</span></span><br><span class="line"><span class="comment">#-l&lt;帐号名称&gt; 修改用户帐号名称。</span></span><br><span class="line"><span class="comment">#-L 锁定用户密码，使密码无效。</span></span><br><span class="line"><span class="comment">#-s&lt;shell&gt; 修改用户登入后所使用的shell。</span></span><br><span class="line"><span class="comment">#-u&lt;uid&gt; 修改用户ID。</span></span><br><span class="line"><span class="comment">#-U 解除密码锁定。</span></span><br></pre></td></tr></table></figure><h2 id="系统设置"><a href="#系统设置" class="headerlink" title="系统设置"></a>系统设置</h2><h2 id="备份压缩"><a href="#备份压缩" class="headerlink" title="备份压缩"></a>备份压缩</h2></li></ol><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p><strong>记录一些自己平时会用到的命令，避免忘记后查资料麻烦。</strong></p><p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p>]]></content>
    
    
    <summary type="html">记录自己常用的Linux命令，以便往后使用查询</summary>
    
    
    
    <category term="学习&amp;随想" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/"/>
    
    <category term="学习📖" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/%E5%AD%A6%E4%B9%A0%F0%9F%93%96/"/>
    
    <category term="Linux" scheme="https://blog.molipre.com/categories/%E5%AD%A6%E4%B9%A0-%E9%9A%8F%E6%83%B3/%E5%AD%A6%E4%B9%A0%F0%9F%93%96/Linux/"/>
    
    
    <category term="Linux" scheme="https://blog.molipre.com/tags/Linux/"/>
    
    <category term="Linux常用命令" scheme="https://blog.molipre.com/tags/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>使用Jsdelivr加快博客的访问速度</title>
    <link href="https://blog.molipre.com/posts/facd24db.html"/>
    <id>https://blog.molipre.com/posts/facd24db.html</id>
    <published>2020-10-26T16:00:00.000Z</published>
    <updated>2020-10-26T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h1><ol><li><strong>博客或者项目部署在Github的朋友应该都会遇到Github加载很慢的问题，甚至有时候可能会打不开，这个时候可能就需要一个CDN加速了。</strong></li><li><strong>JsDelivr 是一个免费、开源的加速CDN公共服务，托管了许多大大小小的项目，可加速访问托管的项目目录或图片资源。如果你想加载Github某个仓库中的CSS样式或JS或者某张图片，可以通过JsDelivr来访问加载的。</strong></li><li><strong><a href="https://www.jsdelivr.com/">JsDelivr官网</a>提供了 <code>Github</code> 、<code>npm</code> 、<code>Wordpress</code> 这三个直观例子，有兴趣的道友可以去<a href="https://www.jsdelivr.com/">官网</a>了解一下。</strong></li></ol><h1 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h1><h2 id="访问Github资源的用法"><a href="#访问Github资源的用法" class="headerlink" title="访问Github资源的用法"></a>访问Github资源的用法</h2><div class="note blue quote flat"><p><strong>这个方法需要你有一个Github账号，没有的话请到<a href="https://github.com/">Github官网</a>注册账号。</strong></p></div><ol><li><strong>登录Github并创建新仓库，把资源部署到Github，具体方法请参考<a href="https://blog.molipre.com/posts/b016f2f1.html">从零开始的个人博客搭建(Win10篇)</a>或以下命令：</strong><br><img src="https://i.loli.net/2020/11/03/BfkljJZri7xUAGY.png" alt="命令.png"></li><li><strong>部署完项目后在 <code>Code</code> 页面点击 <code>Releases</code> 下的 <code>Create a new release</code> ，按照图二操作填写，最后点击 <code>Pulish release</code> 完成即可。</strong><br><img src="https://i.loli.net/2020/11/03/CHkJSWTrwGmfQaZ.png" alt="releases1.png"><br><img src="https://i.loli.net/2020/11/03/O3brwCVMBD2HLZy.png" alt="tags.png"></li><li><strong>如何使用</strong><ul><li><strong>创建完随意进入一个文件中，如下图：</strong><br><img src="https://i.loli.net/2020/11/03/F3ZNv5nlgX17uhc.png" alt="jsd1.png"></li><li><strong>红框中的地址为：</strong><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">https:&#x2F;&#x2F;github.com&#x2F;Molipre&#x2F;Molipre-1.0&#x2F;blob&#x2F;v1.0.1&#x2F;blog&#x2F;mycss&#x2F;mystyle.css</span><br><span class="line">&#x2F;&#x2F;这个地址用jsdelivr访问可以写为：</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;Molipre&#x2F;Molipre-1.0@v1.0.1&#x2F;blog&#x2F;mycss&#x2F;mystyle.css</span><br><span class="line">&#x2F;&#x2F;经过对比可以发现，格式如下：</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;gh&#x2F;用户名称&#x2F;仓库名称@版本号&#x2F;目录</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;注意，不使用jsdelivr直接引用github的文件 content-type 是 text&#x2F;plain 页面无法解析。</span><br></pre></td></tr></table></figure></li></ul></li></ol><h2 id="用于Butterfly主题"><a href="#用于Butterfly主题" class="headerlink" title="用于Butterfly主题"></a>用于Butterfly主题</h2><ol><li><strong>打开主题配置文件 <code>_config.yml</code> ，找到 <code>inject</code> ，如下图所示插入即可：</strong><br><img src="https://i.loli.net/2020/11/03/PCbWDcRnfaUxwNj.png" alt="in.png"></li></ol><div class="note blue quote flat"><p><big><strong>另外两种使用模板如下：</strong></big></p></div><h2 id="访问npm的用法"><a href="#访问npm的用法" class="headerlink" title="访问npm的用法"></a>访问npm的用法</h2><ol><li><p style="font-size:0.7rem;font-weight:600">https://cdn.jsdelivr.net/npm/包名@版本号/目录</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F;加载NPM上托管的任何项目</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;package@version&#x2F;file</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;加载jQuery v3.2.1</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery@3.2.1&#x2F;dist&#x2F;jquery.min.js</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;使用版本范围而不是具体版本</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery@3.2&#x2F;dist&#x2F;jquery.min.js</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery@3&#x2F;dist&#x2F;jquery.min.js</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;完全省略版本，获取最新版本</span><br><span class="line">&#x2F;&#x2F;不能在生产中使用</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery&#x2F;dist&#x2F;jquery.min.js</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;在任意JS&#x2F;CSS文件中添加“.min”，即可得到精简版本</span><br><span class="line">&#x2F;&#x2F;如果没有，我们会为您生成</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery@3.2.1&#x2F;src&#x2F;core.min.js</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;省略文件路径获取默认文件</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery@3.2</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F;在末尾添加&#x2F;，以获取目录列表。</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;npm&#x2F;jquery&#x2F;</span><br></pre></td></tr></table></figure></li></ol><h2 id="访问wordpress的用法"><a href="#访问wordpress的用法" class="headerlink" title="访问wordpress的用法"></a>访问wordpress的用法</h2><ol><li><p style="font-size:0.7rem;font-weight:600">https://cdn.jsdelivr.net/wp/xxxxxxxx</p><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">&#x2F;&#x2F; 加载任何插件从WordPress.org插件SVN repo</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;wp&#x2F;plugins&#x2F;project&#x2F;tags&#x2F;version&#x2F;file</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 加载精确版本</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;wp&#x2F;plugins&#x2F;wp-slimstat&#x2F;tags&#x2F;4.6.5&#x2F;wp-slimstat.js</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 加载最新版本</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 你不应该在生产中使用这个</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;wp&#x2F;plugins&#x2F;wp-slimstat&#x2F;trunk&#x2F;wp-slimstat.js</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 从WordPress.org的主题SVN repo加载任何主题</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;wp&#x2F;themes&#x2F;project&#x2F;version&#x2F;file</span><br><span class="line"></span><br><span class="line">&#x2F;&#x2F; 加载精确版本</span><br><span class="line">https:&#x2F;&#x2F;cdn.jsdelivr.net&#x2F;wp&#x2F;themes&#x2F;twenty-eightteen&#x2F;1.7&#x2F;assets&#x2F;js&#x2F;html5.js</span><br></pre></td></tr></table></figure></li></ol><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p><strong>祝大家成功用上CDN加速，搭建更好更快的博客以及项目。</strong></p><p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p>]]></content>
    
    
    <summary type="html">使用Jsdelivr加速访问Github上托管的静态资源</summary>
    
    
    
    <category term="博客の美化" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/"/>
    
    <category term="Hexo👾" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/Hexo%F0%9F%91%BE/"/>
    
    
    <category term="Hexo" scheme="https://blog.molipre.com/tags/Hexo/"/>
    
    <category term="Github" scheme="https://blog.molipre.com/tags/Github/"/>
    
    <category term="博客搭建" scheme="https://blog.molipre.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="Jsdelivr" scheme="https://blog.molipre.com/tags/Jsdelivr/"/>
    
  </entry>
  
  <entry>
    <title>博客的多终端部署与使用(小白向、持续更新)</title>
    <link href="https://blog.molipre.com/posts/43f57944.html"/>
    <id>https://blog.molipre.com/posts/43f57944.html</id>
    <published>2020-10-21T16:00:00.000Z</published>
    <updated>2020-10-21T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<div class="note red quote flat"><p><strong>多终端部署的前提是，至少在一台终端做好了个人博客的搭建。<br>如未曾部署查看<a href="https://blog.molipre.com/posts/b016f2f1.html">从零开始的个人博客搭建(Win10篇)</a>。</strong></p></div><h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><ol><li><strong>多终端部署的想法是因为国庆在家的时候想要修改博客，但是发现部署到Github的代码克隆下来是已经编译好的，无法用于博客的修改、部署、使用。</strong></li><li><strong>查找了许多资料，以及经过了自己的多次尝试，整合了下面比较适合新手小白的方法，可以应用在电脑或手机等不同设备对博客进行修改和部署。</strong></li></ol><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="远程仓库配置"><a href="#远程仓库配置" class="headerlink" title="远程仓库配置"></a>远程仓库配置</h2><div class="note blue quote flat"><p><strong>我这边演示的平台是Gitee，因为在国内进行更新或拉取比较快。</strong></p></div><ol><li><strong>登录<a herf="https://gitee.com/">Gitee</a>，点击左上角的 <code>+</code> ，接着点击 <code>新建仓库</code> ，在如下图所示的1、2、3、4分别填入 <code>仓库名称</code> 、<code>路径</code> 和点击 <code>私有</code> 以及勾选 <code>初始化</code> ，最后点击 <code>创建</code> 即可，关于名称填写如不理解按照下图所示填写即可。</strong><br><img src="https://i.loli.net/2020/10/30/6X5CGuNbDwUl4oK.png" alt="gitee2.png"><div class="note info flat"><p>关于勾选私有的原因是因为这个是博客的源码并不需要展示出来，当然勾选公开也没有问题。</p></div></li><li><strong>添加密钥</strong><ul><li><strong>在Gitee页面点击左上角的 <code>+</code> ，接着点击 <code>设置</code> ，在左边的侧边栏找到 <code>SSH公钥</code> 并点击，按图片中的1、2操作步骤所示，填写你在<a href="https://blog.molipre.com/posts/b016f2f1.html">从零开始的个人博客搭建(Win10篇)</a>中所生成的公钥 <code>id_rsa.pub</code> 内容，最后确认即可：</strong><div class="note info flat"><p>可以把文件 <code>id_rsa.pub</code> 备份到U盘或网盘，异地终端需要公钥内容。</p></div><img src="https://i.loli.net/2020/10/31/VTgN1IMBUsJWGc7.png" alt="密钥添加2.png"></li></ul></li></ol><h2 id="本地配置Git"><a href="#本地配置Git" class="headerlink" title="本地配置Git"></a>本地配置Git</h2><ol><li><p><strong>打开第一台已配置好的博客的电脑，进入 <code>hexoblog</code> 文件夹，右键点击 <code>Git Bsah Here</code> ，输入以下命令：</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br><span class="line"><span class="comment">#git初始化</span></span><br><span class="line">git remote add origin git@gitee.com:molipre/hexo-source-code.git</span><br><span class="line"><span class="comment">#添加远程仓库</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment">#添加目录下所有文件</span></span><br><span class="line">git commit -m <span class="string">&quot;博客源码&quot;</span></span><br><span class="line"><span class="comment">#提交并添加更新说明</span></span><br><span class="line">git push -u origin master</span><br><span class="line"><span class="comment">#推送更新到远程仓库</span></span><br></pre></td></tr></table></figure><p><strong>出现以下截图内容代表成功把博客源码推送到仓库了：</strong><br><img src="https://i.loli.net/2020/10/31/XLUyWRPMw76qi5G.png" alt="源码推送.png"></p><p><strong>此时打开Gitee的hexo源码仓库便可以看见整个文件夹内容都已经存进仓库：</strong><br><img src="https://i.loli.net/2020/10/31/1FISJNYqLmoXnaH.png" alt="仓库.png"></p></li></ol><h2 id="新终端配置"><a href="#新终端配置" class="headerlink" title="新终端配置"></a>新终端配置</h2><ol><li><strong>参考<a href="https://blog.molipre.com/posts/b016f2f1.html">从零开始的个人博客搭建(Win10篇)</a>软件安装和密钥配置部分，安装好 <code>Git</code> 和  <code>Node.js</code> 两个软件，以及安装好  <code>hexo</code> 和配置好密钥。</strong><div class="note info flat"><p>关于密钥部分，新终端完成密钥部署后，把之前备份好的公钥 <code>id_rsa.pub</code> 复制，粘贴替换 <code>.ssh</code> 文件夹内的 <code>id_rsa.pub</code> 文件，<code>.ssh</code> 文件夹位置 <code>C:\Users或用户\用户名</code> 里。</p></div></li><li><strong>在新终端任意位置创建文件夹 <code>hexoblog</code> ，进入文件，右键点击 <code>Git Bsah Here</code> ，输入以下命令：</strong><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git init</span><br><span class="line"><span class="comment">#git初始化</span></span><br><span class="line">git remote add origin git@gitee.com:molipre/hexo-source-code.git</span><br><span class="line"><span class="comment">#添加远程仓库</span></span><br><span class="line">git <span class="built_in">clone</span> https://gitee.com/molipre/molipre.git</span><br><span class="line"><span class="comment">#从远处仓库上克隆博客源码(该步骤仅在新终端第一次部署时需要)</span></span><br><span class="line">npm install</span><br><span class="line">cnpm install</span><br><span class="line"><span class="comment">#选择其中一个命令即可，如已安装cnpm，建议用cnpm，速度快</span></span><br><span class="line"><span class="comment">#新终端新文件夹安装hexo依赖</span></span><br><span class="line">hexo clean&amp;&amp;hexo g&amp;&amp;hexo s</span><br><span class="line"><span class="comment">#编译本地hexo文件查看远程仓库拉取的博客源码是否有问题</span></span><br></pre></td></tr></table></figure><strong>至此，如无意外，新终端便成功同步上一个终端的博客源码。</strong></li></ol><h1 id="博客管理相关命令"><a href="#博客管理相关命令" class="headerlink" title="博客管理相关命令"></a>博客管理相关命令</h1><h2 id="发布博客后同步"><a href="#发布博客后同步" class="headerlink" title="发布博客后同步"></a>发布博客后同步</h2><ul><li><strong>在B电脑发布完博客之后，记得将博客备份同步到远程仓库。</strong></li><li><strong>执行以下命令：</strong><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git add .</span><br><span class="line"><span class="comment">#添加目录下所有文件</span></span><br><span class="line"><span class="comment">#可以用git master 查看更改内容</span></span><br><span class="line">git commit -m <span class="string">&quot;更新信息&quot;</span></span><br><span class="line"><span class="comment">#提交并添加更新说明</span></span><br><span class="line">git push -u origin master</span><br><span class="line"><span class="comment">#推送更新到远程仓库</span></span><br><span class="line"><span class="comment">#以后每次提交可以直接git push</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="同步管理"><a href="#同步管理" class="headerlink" title="同步管理"></a>同步管理</h2><ul><li><strong>每次想写博客时，先执行：<code>git pull</code> 进行同步更新，发布完文章后同样按照上面的 <code>发布博客后同步</code> 同步到远程仓库。</strong></li></ul><h2 id="常用命令整理"><a href="#常用命令整理" class="headerlink" title="常用命令整理"></a>常用命令整理</h2><ul><li><strong>持续更新</strong><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git pull</span><br><span class="line"><span class="comment">#同步更新</span></span><br><span class="line">hexo new post <span class="string">&quot;新建文章&quot;</span></span><br><span class="line"><span class="comment">#简写形式 hexo n &quot;新建文章&quot;</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="comment">#清除旧的public文件夹</span></span><br><span class="line">hexo generate</span><br><span class="line"><span class="comment">#生成静态文件 简写形式 hexo g</span></span><br><span class="line">hexo deploy</span><br><span class="line"><span class="comment">#发布到github上 简写形式 hexo d</span></span><br><span class="line">git add .</span><br><span class="line"><span class="comment">#添加更改文件到缓存区</span></span><br><span class="line">git commit -m <span class="string">&quot;更新说明&quot;</span></span><br><span class="line"><span class="comment">#提交到本地仓库</span></span><br><span class="line">git push -u origin master</span><br><span class="line"><span class="comment">#推送到远程仓库进行备份</span></span><br></pre></td></tr></table></figure></li></ul><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><ul><li><strong>祝大家成功部署。</strong></li></ul><p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p>]]></content>
    
    
    <summary type="html">不同的设备之间如何部署和使用同一个博客(自我使用备份)</summary>
    
    
    
    <category term="博客の美化" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/"/>
    
    <category term="Hexo👾" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/Hexo%F0%9F%91%BE/"/>
    
    
    <category term="Hexo" scheme="https://blog.molipre.com/tags/Hexo/"/>
    
    <category term="Github" scheme="https://blog.molipre.com/tags/Github/"/>
    
    <category term="Gitee" scheme="https://blog.molipre.com/tags/Gitee/"/>
    
    <category term="博客搭建" scheme="https://blog.molipre.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="多终端" scheme="https://blog.molipre.com/tags/%E5%A4%9A%E7%BB%88%E7%AB%AF/"/>
    
  </entry>
  
  <entry>
    <title>从零开始的个人博客搭建(MacOS篇)</title>
    <link href="https://blog.molipre.com/posts/74231343.html"/>
    <id>https://blog.molipre.com/posts/74231343.html</id>
    <published>2020-10-04T16:00:00.000Z</published>
    <updated>2020-10-04T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p>]]></content>
    
    
    <summary type="html">MacOS系统下本地部署Hexo个人博客并上传同步到Github Pages（主要是给自己看）</summary>
    
    
    
    <category term="博客の美化" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/"/>
    
    <category term="Hexo👾" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/Hexo%F0%9F%91%BE/"/>
    
    
    <category term="Hexo" scheme="https://blog.molipre.com/tags/Hexo/"/>
    
    <category term="Github" scheme="https://blog.molipre.com/tags/Github/"/>
    
    <category term="博客搭建" scheme="https://blog.molipre.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="MacOS" scheme="https://blog.molipre.com/tags/MacOS/"/>
    
  </entry>
  
  <entry>
    <title>从零开始的个人博客搭建(Win10篇)</title>
    <link href="https://blog.molipre.com/posts/b016f2f1.html"/>
    <id>https://blog.molipre.com/posts/b016f2f1.html</id>
    <published>2020-09-30T16:00:00.000Z</published>
    <updated>2020-09-30T16:00:00.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><div class="hide-toggle" style="border: 1px solid bg">  <div class="hide-button toggle-title" style="background-color: bg">    <i class="fas fa-caret-right fa-fw"></i><span>关于第一篇文章以及博客搭建的想法，不建议看</span>  </div>  <div class="hide-content">    <ul>      <div class="note blue paperclip flat"><p>第一次知道博客是各个平台现成的博客，例如CSDN，博客园之类的，毕竟以前查资料就会经常去别人的博客看看，自己也有一个平台博客，但是后面觉得太丑用了，再往以后的某一天，我在网上 查找关于路由器刷机的文章的时候，翻到了一个博客，样式很精美，我现在已经不记得它使用的是什么主题了，但还是记得是使用 <code>Hexo</code> 这个框架。</p></div>      <div class="note yellow paperclip flat"><p>再后来我买了个学生服务器开始搭建博客，开始查资料搭建的是WordPress，后面因为服务器负荷太大，运行几个月后就关闭了博客，今年年初的时候再想起博客这件事，又开始折腾我的服务器，因为疫情和其他事情耽搁，终于在九月份开始了博客搭建，原本是放在服务器上的，不过因为域名备案的原因，就先用着 <code>Github Pages</code>。</p></div>    </ul>  </div></div><p><strong>第一篇文章写博客搭建的原因：</strong><br><strong>第一，记录一下自己搭建博客的过程；</strong><br><strong>第二，就是给完全没有经验的小白朋友一个教程，可以跟着一步一步完成自己的Hexo博客搭建；</strong><br><strong><del>第三，装装门面，实在不知道写什么玩意</del>。</strong></p><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><p><strong><p style="font-size:0.8rem">这篇博文主要分为三个部分：</p></strong></p><div class="note default flat"><p><big>第一部分：环境准备与安装<br>第二部分：Hexo的安装<br>第三部分：将博客部署到Github</big></p></div><h1 id="环境准备与安装"><a href="#环境准备与安装" class="headerlink" title="环境准备与安装"></a>环境准备与安装</h1><h2 id="Node-js和Git的安装"><a href="#Node-js和Git的安装" class="headerlink" title="Node.js和Git的安装"></a>Node.js和Git的安装</h2><p><strong>关于环境，指的是Hexo框架必备的Node.js以及版本控制软件Git，我的博客下载的是当时的最新版 <code>Node.js-v12.16.3</code> 和 <code>Git version 2.26.2.windows.1</code> ，不过版本基本不影响博客的安装使用，所以只需要到官网下载最新版本即可。</strong></p><ol><li><a href="https://nodejs.org/en/"><strong>Node.js</strong></a></li><li><a href="https://git-scm.com/"><strong>Git</strong></a></li></ol><div class="note yellow idea flat"><p>下载和安装非常简单，下载完双击打开后，一直点下一步即可，不过需要注意的是两个软件需要添加环境变量，在软件安装界面可以勾选添加，如果没有添加也不需要担心，我们手动添加即可。</p></div><ol start="3"><li><p><strong>检查环境是否正确安装</strong></p><ul><li><strong>win+r输入cmd打开，在cmd输入 <code>node -v</code> 与 <code>git --version</code> ，如果能输出信息则表示成功。</strong></li></ul><p><img src="https://i.loli.net/2020/10/27/UIaXMbK3ZBvHu1l.jpg" alt="查看版本"></p></li><li><p><strong>手动配置环境变量</strong></p><ul><li><strong>我的电脑→属性→高级系统设置→环境变量→在XXX的用户变量找到Path→编辑</strong></li><li><strong>然后将Git安装目录xxx/git/bin写在里边即可，具体以你的安装情况为主。</strong></li></ul><p><img src="https://i.loli.net/2020/10/27/To1aVGYqnFQrMeu.png" alt="属性"><br><img src="https://i.loli.net/2020/10/27/EMdfzLhFRbniqkZ.png" alt="环境变量"><br><img src="https://i.loli.net/2020/10/27/CQejnWUcyP2gBuv.png" alt="在XXX的用户变量找到Path"></p></li></ol><h1 id="Hexo的安装"><a href="#Hexo的安装" class="headerlink" title="Hexo的安装"></a>Hexo的安装</h1><div class="note primary flat"><p><big><strong>关于Hexo，可以去<a href="https://hexo.io/zh-cn/">官网</a>看看，支持中文，且有详细的使用文档<br>当然，具体搭建可以看接下来的教程。</strong></big></p></div><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a>注意事项</h2><div class="note blue paperclip flat"><p>多次使用npm都要等待很久，极其烦躁，换成cnpm舒服多了，具体也可以看看阿里云的<a href="https://developer.aliyun.com/mirror/NPM?from=tnpm">淘宝NPM镜像</a>，我就不说了。</p></div><p><strong>安装hexo会使用到npm，但因为npm的服务器在国外，npm安装会非常慢（使用xx上网的请忽略），甚至会出现下载安装失败，通常的解决办法是换淘宝镜像源，方法如下：</strong></p><ol><li><strong>win+r输入cmd打开，在cmd输入以下命令：</strong><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line"><span class="comment"># 将npm源替换为阿里的淘宝镜像源</span></span><br></pre></td></tr></table></figure></li><li><strong>每次使用 <code>npm</code> 命令时，把 <code>npm</code> 换成 <code>cnpm</code> 即可</strong></li></ol><h2 id="Hexo的安装与初始化"><a href="#Hexo的安装与初始化" class="headerlink" title="Hexo的安装与初始化"></a>Hexo的安装与初始化</h2><ol><li><p><strong>在你的电脑某个盘建立一个文件夹命名为：<code>hexoblog</code> ，不建议为系统盘（你要放系统盘我也不阻止）</strong></p></li><li><p><strong>进入 <code>hexoblog</code> 文件夹，右键点击 <code>Git Bash Here</code> ，在 <code>Git Bash</code> 输入以下命令：</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br><span class="line"><span class="comment">#安装Hexo</span></span><br><span class="line">hexo -v</span><br><span class="line"><span class="comment">#查看Hexo版本号（判断是否安装成功）</span></span><br></pre></td></tr></table></figure><p><strong>具体如下图所示（红框内容是因为安装了butterfly主题，无需理会）</strong></p><p><img src="https://i.loli.net/2020/10/27/ArZhcSWK6glEtOG.png" alt="查看hexo版本"></p></li><li><p><strong>初始化Hexo，同样是在 <code>Git Bash</code> 输入以下命令：</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo init</span><br><span class="line"><span class="comment">#初始化Hexo</span></span><br></pre></td></tr></table></figure><p><strong>看到如下图的结果就代表你已经完成了Hexo博客的初始化</strong></p><p><img src="https://i.loli.net/2020/10/27/D4yjIQRw6lSuTgO.png" alt="hexo初始化"></p><h2 id="查看Hexo博客与主题安装"><a href="#查看Hexo博客与主题安装" class="headerlink" title="查看Hexo博客与主题安装"></a>查看Hexo博客与主题安装</h2></li><li><p><strong>查看Hexo博客，在 <code>hexoblog</code> 文件夹右键点击 <code>Git Bash Here</code> ，输入以下命令：</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line"><span class="comment">#清空缓存</span></span><br><span class="line">hexo generate</span><br><span class="line">hexo g <span class="comment">#简写</span></span><br><span class="line"><span class="comment">#重新编译</span></span><br><span class="line">hexo server</span><br><span class="line">hexo s <span class="comment">#简写</span></span><br><span class="line"><span class="comment">#打开本地访问</span></span><br></pre></td></tr></table></figure><p><img src="https://i.loli.net/2020/10/27/jQZMOLIKzAxHslp.png" alt="hexo s"></p><p><strong>看到上图所示的提示，那么此时打开浏览器输入 <code>http://127.0.0.1:4000</code> 即可查看到如下图所示的博客。</strong><br><img src="https://i.loli.net/2020/10/27/TNMVfvBHiXK2Gxc.png" alt="博客主页"></p></li><li><p><strong>安装主题</strong></p><ul><li><strong>我自己使用的主题是 <code>Butterfly</code> ，你可以到主题的<a href="https://github.com/jerryc127/hexo-theme-butterfly">Github地址</a>下载，将下载好的 <code>hexo-theme-butterfly-dev.zip</code> 文件解压后重命名为 <code>butterfly</code> 并放入 <code>hexoblog\themes</code> 中即可，关于此主题的更多内容请参考<a href="https://demo.jerryc.me/">主题文档</a>。</strong></li><li><strong>当然，你也可以在 <code>hexoblog</code> 文件夹右键点击 <code>Git Bash Here</code> 输入以下命令来安装 <code>Butterfly</code> 这个主题：</strong><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git <span class="built_in">clone</span> -b master https://github.com/jerryc127/hexo-theme-butterfly.git themes/butterfly</span><br></pre></td></tr></table></figure></li><li><strong>如果你没有选择此主题，请注意你所选用的主题是否需要放在 <code>hexoblog\themes</code> 文件里。</strong></li><li><strong>主题选择完请按照主题的官方文档进行配置。</strong></li></ul></li></ol><h1 id="将博客部署到Github"><a href="#将博客部署到Github" class="headerlink" title="将博客部署到Github"></a>将博客部署到Github</h1><h2 id="注册Github账号"><a href="#注册Github账号" class="headerlink" title="注册Github账号"></a>注册Github账号</h2><p><strong>（如有Github账号请忽视本小节内容）</strong></p><ol><li><strong>访问<a herf="https://github.com/">Github官网</a>按照提示注册即可。</strong></li><li><strong>如注册过程中遇到 <code>Unable to verify your captcha response</code> 报错，请按照以下两种方法分别尝试：</strong><div class="note default flat"><p><strong>第一种，把Github的域名添加到你的hosts文件中，操作方法自行百度。</strong><br><strong>第二种，使用XX上网，至于XX上网是什么，请自行百度。</strong></p></div></li></ol><h2 id="创建仓库和配置密钥"><a href="#创建仓库和配置密钥" class="headerlink" title="创建仓库和配置密钥"></a>创建仓库和配置密钥</h2><ol><li><strong>在Github首页右上角点击 <code>+</code> ，找到 <code>New repositories</code> 并点击，进入 <code>Create a new repository</code> ，在 <code>Repository name</code> 填写 <code>username.github.io</code> （username是你的账号名)，其他默认就行，最后点击 <code>Create repository</code> 就完成仓库创建。</strong><div class="note info flat"><p>关于为何要使用 <code>username.github.io</code> 作为仓库名，请查看Github相关资料：<a href="https://help.github.com/articles/user-organization-and-project-pages/">About GitHub Pages</a></p></div></li><li><strong>创建密钥对</strong><ul><li><strong>在 <code>hexoblog</code> 文件夹右键点击 <code>Git Bash Here</code> 输入以下命令：</strong><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;Your Github Name&quot;</span></span><br><span class="line"><span class="comment">#配置用户名</span></span><br><span class="line">git config --global user.email <span class="string">&quot;Your Github Email&quot;</span></span><br><span class="line"><span class="comment">#配置邮箱</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;Your Github Email&quot;</span></span><br><span class="line"><span class="comment">#生成密钥，-C后面加邮箱，是为了公钥被github认可</span></span><br></pre></td></tr></table></figure></li><li><strong>生成密钥的命令输入后只需要不断回车即可。</strong></li><li><strong>密钥生成以后，默认位置是在用户文件的 <code>.ssh</code> 文件夹内，在Windows上就在 <code>C:\Users或用户\用户名</code> 里，打开 <code>.ssh</code> 就能看到私钥：<code>id_rsa</code> 和公钥：<code>id_rsa.pub</code> 。</strong></li></ul></li><li><strong>在Github上配置公钥</strong><ul><li><strong>把上面找到的公钥：<code>id_rsa.pub</code> 用记事本或者编辑打开，复制如下图内容</strong><br><br><img src="https://i.loli.net/2020/10/28/Yv3xe98rkzwnNqK.png" alt="密钥"></li><li><strong>接着打开<a href="https://github.com/">Github</a>，点击 <code>头像</code> ，点击 <code>settings</code> ，在设置页面找到 <code>SSH and GPG keys</code> ，点击 <code>New SSH key</code> 按照下图的1、2、3操作即可。</strong><br><img src="https://i.loli.net/2020/10/28/4PJAYrQkyhCB2Hz.png" alt="添加密钥"></li><li><strong>点击完成后，在git bash测试sshkey是否添加成功，输入一下命令：</strong><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure></li><li><strong>得到类似下图的反馈便是成功连接：</strong><br><img src="https://i.loli.net/2020/10/28/dnSOUtGl4jo8Qhx.jpg" alt="成功连接"><div class="hide-toggle" style="border: 1px solid bg"><div class="hide-button toggle-title" style="background-color: bg">  <i class="fas fa-caret-right fa-fw"></i><span>可能会遇到的BUG</span></div><div class="hide-content">  <ul>   在输入上述测试命令后出现以下报错提示：   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh: connect to host gitee.com port 22: Connection timed out</span><br></pre></td></tr></table></figure>   主要原因是默认的SSH端口号22被占用或被修改，那么只需要测试命令加上你的端口号即可，如下所示：   <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ssh -T git@ssh.github.com -p 端口号</span><br><span class="line"><span class="comment">#-p 端口号 可以表示为 -p 11111，端口号范围1~65535，但请避开一下默认端口</span></span><br></pre></td></tr></table></figure>  </ul></div></div></li></ul></li></ol><h2 id="配置本地站点配置文件"><a href="#配置本地站点配置文件" class="headerlink" title="配置本地站点配置文件"></a>配置本地站点配置文件</h2><ol><li><p><strong>打开你的 <code>hexoblog</code> 文件夹，找到 <code>_config.yml</code> 文件，记事本或编辑器打开，找到 <code>deploy</code> 修改内容如下所示：</strong></p><figure class="highlight yml"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Deployment</span></span><br><span class="line"><span class="comment">## Docs: https://hexo.io/docs/one-command-deployment</span></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"><span class="attr">repo:</span></span><br><span class="line">    <span class="attr">github:</span> <span class="string">git@github.com:username/username.github.io.git</span> <span class="comment">#username为你的Github用户名</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">main</span></span><br><span class="line"><span class="comment">#2020年10月1号起创建的所有新的源代码仓库将默认被命名为 &quot;main&quot;，而不是原先的&quot;master&quot;</span></span><br><span class="line"><span class="comment">#如果是2020年10月1号前创建的源代码仓库，请用以下代码：</span></span><br><span class="line"><span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure></li></ol><h2 id="提交本地博客到Github"><a href="#提交本地博客到Github" class="headerlink" title="提交本地博客到Github"></a>提交本地博客到Github</h2><ol><li><p><strong>上述全部配置完成后，打开你的 <code>hexoblog </code>文件夹右键点击 <code>Git Bash Here</code> 输入以下命令：</strong></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">hexo clean</span><br><span class="line">hexo generate</span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></li><li><p><strong>如无意外，浏览器输入 <code>username.github.io</code> 即可访问你的博客了。</strong></p><div class="hide-toggle" style="border: 1px solid bg"><div class="hide-button toggle-title" style="background-color: bg"> <i class="fas fa-caret-right fa-fw"></i><span>如有意外，请查看是否符合以下报错：</span></div><div class="hide-content"> <ul> 在输入1中的命令后出现以下报错提示：  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">ERROR Deployer not found: git</span><br></pre></td></tr></table></figure>  主要原因是是没有安装自动部署插件，那么只需要以下命令安装即可，如下所示：  <figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure>  等待插件安装完成，然后再次输入1中的命令即可。 </ul></div></div></li></ol><h1 id="完结"><a href="#完结" class="headerlink" title="完结"></a>完结</h1><ul><li><strong>文章结束当然要写个结束语了，毫无意外，这就是我的第一篇博客文章了，当然只是Hexo这个博客搭建起来的后的第一篇博文，希望你能看的清晰，愉快的搭建起自己的博客，再见👋。</strong></li></ul><p><big><strong><center>如有问题请点击<a href="mailto:819591739@qq.com">邮件</a>或在底下评论与我联系</center></strong></big></p><!-- <a class="btn-beautify button--animated blue block right larger" href="https://blog.molipre.com/posts/74231343.html"   title="从零开始的个人博客搭建(MacOS篇)"><i class="far fa-hand-point-right fa-fw"></i><span>从零开始的个人博客搭建(MacOS篇)</span></a> --><!-- <p style="font-size:1.2rem;font-weight:700"><strong>如需在MacOS部署请查看MacOS篇。</strong></p> -->]]></content>
    
    
    <summary type="html">Win10系统下本地部署Hexo个人博客并上传同步到Github Pages（主要是给自己看）</summary>
    
    
    
    <category term="博客の美化" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/"/>
    
    <category term="Hexo👾" scheme="https://blog.molipre.com/categories/%E5%8D%9A%E5%AE%A2%E3%81%AE%E7%BE%8E%E5%8C%96/Hexo%F0%9F%91%BE/"/>
    
    
    <category term="Hexo" scheme="https://blog.molipre.com/tags/Hexo/"/>
    
    <category term="Github" scheme="https://blog.molipre.com/tags/Github/"/>
    
    <category term="博客搭建" scheme="https://blog.molipre.com/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
    
    <category term="Win10" scheme="https://blog.molipre.com/tags/Win10/"/>
    
  </entry>
  
</feed>
